{"ast":null,"code":"var _jsxFileName = \"/app/src/Messagerie/Channel/ChannelsUtils.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MessagesContext = /*#__PURE__*/createContext({\n  messages: [],\n  setMessages: () => {},\n  SaveChannel: [],\n  setSaveChannel: () => {}\n});\nexport const MessagesProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [SaveChannel, setSaveChannel] = useState([]);\n  return /*#__PURE__*/_jsxDEV(MessagesContext.Provider, {\n    value: {\n      messages,\n      setMessages,\n      SaveChannel,\n      setSaveChannel\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n_s(MessagesProvider, \"Vs1Ku196OQ3iuAWdxlQiCKbDXd0=\");\n_c = MessagesProvider;\nvar _c;\n$RefreshReg$(_c, \"MessagesProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","MessagesContext","messages","setMessages","SaveChannel","setSaveChannel","MessagesProvider","_ref","_s","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/Messagerie/Channel/ChannelsUtils.tsx"],"sourcesContent":["import { ReactNode, createContext, useState } from \"react\";\nimport { MessageDto } from \"../../Chat/Messages\";\n\nexport interface ChannelDto {\n\tid: number;\n\tname: string;\n\tstate: string;\n\townerId: number;\n}\n\nexport interface userInfoDto {\n\tid: number;\n\tusername: string;\n\tavatar: string;\n}\n\ntype MessagesContextType = {\n\tmessages: MessageDto[];\n\tsetMessages: React.Dispatch<React.SetStateAction<MessageDto[]>>;\n\tSaveChannel: ChannelDto[];\n\tsetSaveChannel: React.Dispatch<React.SetStateAction<ChannelDto[]>>;\n}\n\nexport const MessagesContext = createContext<MessagesContextType>({\n\tmessages: [],\n\tsetMessages: () => {},\n\tSaveChannel: [],\n\tsetSaveChannel: () => {},\n});\n\nexport const MessagesProvider = ({ children }: { children: ReactNode }) => {\n\tconst [messages, setMessages] = useState<MessageDto[]>([]);\n\tconst [SaveChannel, setSaveChannel] = useState<ChannelDto[]>([]);\n\n\treturn (\n\t\t<MessagesContext.Provider value={{ messages, setMessages, SaveChannel, setSaveChannel }}>\n\t\t\t{children}\n\t\t</MessagesContext.Provider>\n\t);\n};\n"],"mappings":";;AAAA,SAAoBA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAuB3D,OAAO,MAAMC,eAAe,gBAAGJ,aAAa,CAAsB;EACjEK,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAEA,CAAA,KAAM,CAAC,CAAC;EACrBC,WAAW,EAAE,EAAE;EACfC,cAAc,EAAEA,CAAA,KAAM,CAAC;AACxB,CAAC,CAAC;AAEF,OAAO,MAAMC,gBAAgB,GAAGC,IAAA,IAA2C;EAAAC,EAAA;EAAA,IAA1C;IAAEC;EAAkC,CAAC,GAAAF,IAAA;EACrE,MAAM,CAACL,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAe,EAAE,CAAC;EAC1D,MAAM,CAACM,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAe,EAAE,CAAC;EAEhE,oBACCE,OAAA,CAACC,eAAe,CAACS,QAAQ;IAACC,KAAK,EAAE;MAAET,QAAQ;MAAEC,WAAW;MAAEC,WAAW;MAAEC;IAAe,CAAE;IAAAI,QAAA,EACtFA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACiB;AAE7B,CAAC;AAACP,EAAA,CATWF,gBAAgB;AAAAU,EAAA,GAAhBV,gBAAgB;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}