{"ast":null,"code":"var _jsxFileName = \"/app/src/Profile/Components/MainInfo/ProfileQR.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport QRCodeSVG from 'qrcode.react';\nimport axios from 'axios';\nimport { useStore } from 'react-redux';\nimport './ProfileQR.css';\n/* Components */\nimport Input from '../../../Login/Components/Auth/Input/Input';\nimport Button from '../../../Login/Components/Auth/Button/Button';\n/* Functions */\nimport { fetchOrUpdateUser } from '../../../utils/redux/user';\nimport { inputProtectionQR } from '../../../Login/Components/Auth/Input/inputProtection';\n/* Ressources */\nimport closeQR from './Ressources/closeQR.svg';\nimport padlock from './Ressources/padlock.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProfileQR = _ref => {\n  _s();\n  let {\n    handleTrigger\n  } = _ref;\n  const me = document.getElementsByClassName('popup');\n  const toggleState = document.querySelector('.simpletoggle-wrapper input[type=\"checkbox\"]');\n  const [qrCodeUrl, setQrCodeUrl] = useState('');\n  const [secretKey, setSecretKey] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [code, setCode] = useState(false);\n  const store = useStore();\n  useEffect(() => {\n    window.onclick = event => {\n      if (event.target === me[0]) {\n        handleTrigger();\n        toggleState.checked = false;\n      }\n    };\n  }, [me, handleTrigger, toggleState]);\n  useEffect(() => {\n    async function fetchQR() {\n      try {\n        const {\n          data\n        } = await axios.post('http://localhost:3333/auth/2fa/setup', {}, {\n          withCredentials: true\n        });\n        setSecretKey(data.secret);\n        setQrCodeUrl(data.otpAuthUrl);\n      } catch (error) {\n        alert('2FA already enabled');\n      }\n    }\n    fetchQR();\n  }, []);\n  const handleClick = async () => {\n    var _document$querySelect;\n    const inputKey = (_document$querySelect = document.querySelector('.input-wrapper input')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.value;\n    if (inputKey) {\n      const error = inputProtectionQR(inputKey);\n      if (error === '') {\n        try {\n          await axios.post('http://localhost:3333/auth/2fa/verify', {\n            inputKey\n          }, {\n            withCredentials: true\n          });\n          await fetchOrUpdateUser(store);\n          window.location.reload();\n        } catch (error) {\n          setInputError('Wrong key');\n        }\n      } else setInputError(error);\n    } else setInputError('Please enter a key');\n  };\n  const handleCode = event => {\n    const parent = event.currentTarget.parentElement;\n    parent.style.height = '488px';\n    setCode(!code);\n  };\n  const resetTrigger = () => {\n    handleTrigger();\n    toggleState.checked = false; // Point d'exclamation permet de garantir que l'élément existe\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profileqr-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: closeQR,\n      alt: \"close-button\",\n      onClick: resetTrigger\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"2FA Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(QRCodeSVG, {\n      value: qrCodeUrl,\n      bgColor: \"#F9DA49\",\n      size: 68\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: 600\n        },\n        children: \"Scan the Qr Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 5\n      }, this), \"This will generate a code that you will have to fill bellow\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }, this), code ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontStyle: 'italic'\n        },\n        children: [\"If you're unable to scan the code, you can still enable 2FA by manually entering the code\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontWeight: 600\n          },\n          children: secretKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 6\n      }, this), \"Please note that this method takes longer and is less secure than scanning the QR code. Keep your account safe by choosing the QR code option whenever possible.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"code-button\",\n      onClick: handleCode,\n      children: \"I cant scan the QR Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      input_title: \"Generated Code\",\n      placeholder: \"enter the generated code\",\n      icon: padlock,\n      error: inputError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      content: \"Enable 2FA\",\n      href: \"\",\n      absolut: true,\n      bottom: false,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 3\n  }, this);\n};\n_s(ProfileQR, \"fl9WKOU2lezt+p1rPx+L4GII7WI=\", false, function () {\n  return [useStore];\n});\n_c = ProfileQR;\nvar _c;\n$RefreshReg$(_c, \"ProfileQR\");","map":{"version":3,"names":["React","useEffect","useState","QRCodeSVG","axios","useStore","Input","Button","fetchOrUpdateUser","inputProtectionQR","closeQR","padlock","jsxDEV","_jsxDEV","ProfileQR","_ref","_s","handleTrigger","me","document","getElementsByClassName","toggleState","querySelector","qrCodeUrl","setQrCodeUrl","secretKey","setSecretKey","inputError","setInputError","code","setCode","store","window","onclick","event","target","checked","fetchQR","data","post","withCredentials","secret","otpAuthUrl","error","alert","handleClick","_document$querySelect","inputKey","value","location","reload","handleCode","parent","currentTarget","parentElement","style","height","resetTrigger","className","children","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","bgColor","size","fontWeight","fontStyle","input_title","placeholder","icon","content","href","absolut","bottom","_c","$RefreshReg$"],"sources":["/app/src/Profile/Components/MainInfo/ProfileQR.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport QRCodeSVG from 'qrcode.react';\nimport axios from 'axios';\nimport { useStore } from 'react-redux';\nimport './ProfileQR.css';\n/* Components */\nimport Input from '../../../Login/Components/Auth/Input/Input';\nimport Button from '../../../Login/Components/Auth/Button/Button';\n/* Functions */\nimport { fetchOrUpdateUser } from '../../../utils/redux/user';\nimport { inputProtectionQR } from '../../../Login/Components/Auth/Input/inputProtection';\n/* Ressources */\nimport closeQR from './Ressources/closeQR.svg';\nimport padlock from './Ressources/padlock.svg';\n\ninterface ProfileQRProps {\n\thandleTrigger: () => void;\n}\n\nexport const ProfileQR = ({ handleTrigger }: ProfileQRProps) => {\n\tconst me = document.getElementsByClassName('popup');\n\tconst toggleState = document.querySelector<HTMLInputElement>(\n\t\t'.simpletoggle-wrapper input[type=\"checkbox\"]'\n\t);\n\tconst [qrCodeUrl, setQrCodeUrl] = useState('');\n\tconst [secretKey, setSecretKey] = useState('');\n\tconst [inputError, setInputError] = useState('');\n\tconst [code, setCode] = useState(false);\n\tconst store = useStore();\n\n\tuseEffect(() => {\n\t\twindow.onclick = (event: any) => {\n\t\t\tif (event.target === me[0]) {\n\t\t\t\thandleTrigger();\n\t\t\t\ttoggleState!.checked = false;\n\t\t\t}\n\t\t};\n\t}, [me, handleTrigger, toggleState]);\n\n\tuseEffect(() => {\n\t\tasync function fetchQR() {\n\t\t\ttry {\n\t\t\t\tconst { data } = await axios.post(\n\t\t\t\t\t'http://localhost:3333/auth/2fa/setup',\n\t\t\t\t\t{},\n\t\t\t\t\t{\n\t\t\t\t\t\twithCredentials: true,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tsetSecretKey(data.secret);\n\t\t\t\tsetQrCodeUrl(data.otpAuthUrl);\n\t\t\t} catch (error) {\n\t\t\t\talert('2FA already enabled');\n\t\t\t}\n\t\t}\n\t\tfetchQR();\n\t}, []);\n\n\tconst handleClick = async () => {\n\t\tconst inputKey: string | undefined =\n\t\t\tdocument.querySelector<HTMLInputElement>(\n\t\t\t\t'.input-wrapper input'\n\t\t\t)?.value;\n\t\tif (inputKey) {\n\t\t\tconst error: string = inputProtectionQR(inputKey);\n\t\t\tif (error === '') {\n\t\t\t\ttry {\n\t\t\t\t\tawait axios.post(\n\t\t\t\t\t\t'http://localhost:3333/auth/2fa/verify',\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tinputKey,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\twithCredentials: true,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tawait fetchOrUpdateUser(store);\n\t\t\t\t\twindow.location.reload();\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsetInputError('Wrong key');\n\t\t\t\t}\n\t\t\t} else setInputError(error);\n\t\t} else setInputError('Please enter a key');\n\t};\n\n\tconst handleCode = (event: any) => {\n\t\tconst parent = event.currentTarget.parentElement;\n\t\tparent.style.height = '488px';\n\t\tsetCode(!code);\n\t};\n\n\tconst resetTrigger = () => {\n\t\thandleTrigger();\n\t\ttoggleState!.checked = false; // Point d'exclamation permet de garantir que l'élément existe\n\t};\n\n\treturn (\n\t\t<div className=\"profileqr-wrapper\">\n\t\t\t<img src={closeQR} alt=\"close-button\" onClick={resetTrigger} />\n\t\t\t<h2>2FA Status</h2>\n\t\t\t<QRCodeSVG value={qrCodeUrl} bgColor=\"#F9DA49\" size={68} />\n\t\t\t<p>\n\t\t\t\t<span style={{ fontWeight: 600 }}>Scan the Qr Code</span>\n\t\t\t\t<br />\n\t\t\t\tThis will generate a code that you will have to fill bellow\n\t\t\t\t<br />\n\t\t\t</p>\n\t\t\t{code ? (\n\t\t\t\t<p>\n\t\t\t\t\t<span style={{ fontStyle: 'italic' }}>\n\t\t\t\t\t\tIf you're unable to scan the code, you can still enable\n\t\t\t\t\t\t2FA by manually entering the code{' '}\n\t\t\t\t\t\t<span style={{ fontWeight: 600 }}>{secretKey}</span>\n\t\t\t\t\t</span>\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\tPlease note that this method takes longer and is less secure\n\t\t\t\t\tthan scanning the QR code. Keep your account safe by\n\t\t\t\t\tchoosing the QR code option whenever possible.\n\t\t\t\t</p>\n\t\t\t) : (\n\t\t\t\t<button className=\"code-button\" onClick={handleCode}>\n\t\t\t\t\tI cant scan the QR Code\n\t\t\t\t</button>\n\t\t\t)}\n\t\t\t<Input\n\t\t\t\tinput_title=\"Generated Code\"\n\t\t\t\tplaceholder=\"enter the generated code\"\n\t\t\t\ticon={padlock}\n\t\t\t\terror={inputError}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tcontent=\"Enable 2FA\"\n\t\t\t\thref=\"\"\n\t\t\t\tabsolut={true}\n\t\t\t\tbottom={false}\n\t\t\t\tonClick={handleClick}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}