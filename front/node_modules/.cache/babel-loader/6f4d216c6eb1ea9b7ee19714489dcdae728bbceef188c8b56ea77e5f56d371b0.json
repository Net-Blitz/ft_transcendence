{"ast":null,"code":"var _jsxFileName = \"/app/src/MainPage/Components/Filter/FilterButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './FilterButton.css';\nimport arrowDown from '../Ressources/arrow_down_beige.svg';\nimport close from '../Ressources/close_blue.svg';\n\n//interface\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FilterButton = _ref => {\n  _s();\n  let {\n    label,\n    options,\n    onFilter,\n    isOpen,\n    setIsOpen,\n    toggleDropdown,\n    resetFilter\n  } = _ref;\n  const [selectedFilter, setSelectedFilter] = useState(label); //if one filter was selected\n  const [isFilterSelected, setIsFilterSelected] = useState(false);\n  const handleFilterClick = option => {\n    //when we click on a filter\n    setSelectedFilter(`${label}: ${option}`); //update the selected filter\n    onFilter(option);\n    setIsFilterSelected(true);\n    setIsOpen(false);\n  };\n  useEffect(() => {\n    setSelectedFilter(label);\n    setIsFilterSelected(false);\n  }, [resetFilter, label]);\n  const handleButtonClose = () => {\n    if (isFilterSelected) {\n      setSelectedFilter(label);\n      setIsFilterSelected(false);\n      onFilter('all');\n    }\n    toggleDropdown();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `filterButton${isFilterSelected ? ' filterButtonSelected' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleDropdown,\n      children: [selectedFilter, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleButtonClose,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: isFilterSelected ? close : arrowDown,\n          alt: selectedFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filterDropdown\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleFilterClick(option),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `rectSubFilter${selectedFilter === `${label}: ${option}` ? ' rectSubFilterSelected' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `txtSubFilter${selectedFilter === `${label}: ${option}` ? ' txtSubFilterSelected' : ''}`,\n          children: option\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 8\n        }, this)]\n      }, option, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n};\n_s(FilterButton, \"Swd47A050ITDE5HJ2TLe2Q5xolE=\");\n_c = FilterButton;\nexport default FilterButton;\nvar _c;\n$RefreshReg$(_c, \"FilterButton\");","map":{"version":3,"names":["React","useState","useEffect","arrowDown","close","jsxDEV","_jsxDEV","FilterButton","_ref","_s","label","options","onFilter","isOpen","setIsOpen","toggleDropdown","resetFilter","selectedFilter","setSelectedFilter","isFilterSelected","setIsFilterSelected","handleFilterClick","option","handleButtonClose","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/app/src/MainPage/Components/Filter/FilterButton.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './FilterButton.css';\nimport arrowDown from '../Ressources/arrow_down_beige.svg';\nimport close from '../Ressources/close_blue.svg';\n\n//interface\nimport { FilterButtonProps } from '../../types';\n\nconst FilterButton: React.FC<FilterButtonProps> = ({\n\tlabel,\n\toptions,\n\tonFilter,\n\tisOpen,\n\tsetIsOpen,\n\ttoggleDropdown,\n\tresetFilter,\n}) => {\n\tconst [selectedFilter, setSelectedFilter] = useState(label); //if one filter was selected\n\tconst [isFilterSelected, setIsFilterSelected] = useState(false);\n\n\tconst handleFilterClick = (option: string) => {\n\t\t//when we click on a filter\n\t\tsetSelectedFilter(`${label}: ${option}`); //update the selected filter\n\t\tonFilter(option);\n\t\tsetIsFilterSelected(true);\n\t\tsetIsOpen(false);\n\t};\n\n\tuseEffect(() => {\n\t\tsetSelectedFilter(label);\n\t\tsetIsFilterSelected(false);\n\t}, [resetFilter, label]);\n\n\tconst handleButtonClose = () => {\n\t\tif (isFilterSelected) {\n\t\t\tsetSelectedFilter(label);\n\t\t\tsetIsFilterSelected(false);\n\t\t\tonFilter('all');\n\t\t}\n\t\ttoggleDropdown();\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`filterButton${\n\t\t\t\tisFilterSelected ? ' filterButtonSelected' : ''\n\t\t\t}`}>\n\t\t\t{/* add filterButtonSelected as a classname if it is selected */}\n\t\t\t<button onClick={toggleDropdown}>\n\t\t\t\t{selectedFilter}\n\t\t\t\t<button onClick={handleButtonClose}>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={isFilterSelected ? close : arrowDown}\n\t\t\t\t\t\talt={selectedFilter}\n\t\t\t\t\t/>\n\t\t\t\t</button>\n\t\t\t</button>\n\t\t\t{/* if it is open : */}\n\t\t\t{isOpen && (\n\t\t\t\t<div className=\"filterDropdown\">\n\t\t\t\t\t{options.map((option) => (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tkey={option}\n\t\t\t\t\t\t\tonClick={() => handleFilterClick(option)}>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName={`rectSubFilter${\n\t\t\t\t\t\t\t\t\tselectedFilter === `${label}: ${option}`\n\t\t\t\t\t\t\t\t\t\t? ' rectSubFilterSelected'\n\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t}`}></div>\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName={`txtSubFilter${\n\t\t\t\t\t\t\t\t\tselectedFilter === `${label}: ${option}`\n\t\t\t\t\t\t\t\t\t\t? ' txtSubFilterSelected'\n\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t}`}>\n\t\t\t\t\t\t\t\t{option}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default FilterButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}