{"ast":null,"code":"var _jsxFileName = \"/app/src/Messagerie/Channel/Invite.tsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport { ChannelsContext } from './ChannelsUtils';\nimport close from '../../Profile/Components/MainInfo/Ressources/close.svg';\nimport { useSelector } from 'react-redux';\nimport { selectUserData } from '../../utils/redux/selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Invite(_ref) {\n  _s();\n  let {\n    socket,\n    setSelectedChannel\n  } = _ref;\n  const [Invites, setInvites] = useState([]);\n  const {\n    SaveChannel,\n    setSaveChannel,\n    setMessages\n  } = useContext(ChannelsContext);\n  const connectedUser = useSelector(selectUserData);\n  useEffect(() => {\n    const fetchInvites = async () => {\n      try {\n        const response = await axios.get('http://localhost:3333/chat/invites', {\n          withCredentials: true\n        });\n        setInvites(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchInvites();\n    const interval = setInterval(fetchInvites, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  const getMessages = async Channel => {\n    try {\n      const response = await axios.get('http://localhost:3333/chat/channel/messages/' + Channel.id, {\n        withCredentials: true\n      });\n      response.data.map(message => {\n        return message.userId === connectedUser.id ? message.username = connectedUser.username : message.username = '', message.content = message.message;\n      });\n      setMessages(response.data.reverse());\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const JoinPrivateChannel = async Channel => {\n    try {\n      await axios.post('http://localhost:3333/chat/join/' + Channel.name, {\n        state: 'PRIVATE'\n      }, {\n        withCredentials: true\n      });\n      setSelectedChannel(Channel);\n      getMessages(Channel);\n      socket === null || socket === void 0 ? void 0 : socket.emit('join', {\n        channel: Channel.name,\n        username: connectedUser.username\n      });\n      setSaveChannel([...SaveChannel, Channel]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const DeclineInvite = async Channel => {\n    try {\n      axios.delete('http://localhost:3333/chat/decline/' + Channel.name, {\n        withCredentials: true\n      });\n    } catch (error) {\n      console.error(error);\n    }\n    setInvites(Invites.filter(channel => channel.name !== Channel.name));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: Invites.map((invite, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dm-list-element\",\n      style: {\n        justifyContent: 'space-around'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"You are intive to \", invite.channels.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#fdfad0'\n        },\n        className: \"chat-accept-invite\",\n        onClick: () => JoinPrivateChannel(invite.channels),\n        children: \"\\u2713\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: close,\n        alt: \"decline invite\",\n        onClick: () => DeclineInvite(invite.channels)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 6\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this))\n  }, void 0, false);\n}\n_s(Invite, \"4ObgiqHRiFVkYCUV+RcuE2WSC4U=\", false, function () {\n  return [useSelector];\n});\n_c = Invite;\nexport default Invite;\nvar _c;\n$RefreshReg$(_c, \"Invite\");","map":{"version":3,"names":["axios","useContext","useEffect","useState","ChannelsContext","close","useSelector","selectUserData","jsxDEV","_jsxDEV","Fragment","_Fragment","Invite","_ref","_s","socket","setSelectedChannel","Invites","setInvites","SaveChannel","setSaveChannel","setMessages","connectedUser","fetchInvites","response","get","withCredentials","data","error","console","interval","setInterval","clearInterval","getMessages","Channel","id","map","message","userId","username","content","reverse","log","JoinPrivateChannel","post","name","state","emit","channel","DeclineInvite","delete","filter","children","invite","index","className","style","justifyContent","channels","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","src","alt","_c","$RefreshReg$"],"sources":["/app/src/Messagerie/Channel/Invite.tsx"],"sourcesContent":["import axios from 'axios';\nimport { useContext, useEffect, useState } from 'react';\nimport { ChannelDto, ChannelsContext } from './ChannelsUtils';\nimport { Socket } from 'socket.io-client';\nimport close from '../../Profile/Components/MainInfo/Ressources/close.svg';\nimport { useSelector } from 'react-redux';\nimport { selectUserData } from '../../utils/redux/selectors';\n\ninterface InviteProps {\n\tsocket: Socket;\n\tsetSelectedChannel: React.Dispatch<\n\t\tReact.SetStateAction<ChannelDto | undefined>\n\t>;\n}\n\nfunction Invite({ socket, setSelectedChannel }: InviteProps) {\n\tconst [Invites, setInvites] = useState<any[]>([]);\n\tconst { SaveChannel, setSaveChannel, setMessages } =\n\t\tuseContext(ChannelsContext);\n\tconst connectedUser = useSelector(selectUserData);\n\n\tuseEffect(() => {\n\t\tconst fetchInvites = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await axios.get(\n\t\t\t\t\t'http://localhost:3333/chat/invites',\n\t\t\t\t\t{ withCredentials: true }\n\t\t\t\t);\n\t\t\t\tsetInvites(response.data);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t};\n\t\tfetchInvites();\n\t\tconst interval = setInterval(fetchInvites, 5000);\n\t\treturn () => clearInterval(interval);\n\t}, []);\n\n\tconst getMessages = async (Channel: ChannelDto) => {\n\t\ttry {\n\t\t\tconst response = await axios.get(\n\t\t\t\t'http://localhost:3333/chat/channel/messages/' + Channel.id,\n\t\t\t\t{ withCredentials: true }\n\t\t\t);\n\t\t\tresponse.data.map((message: any) => {\n\t\t\t\treturn (\n\t\t\t\t\tmessage.userId === connectedUser.id\n\t\t\t\t\t\t? (message.username = connectedUser.username)\n\t\t\t\t\t\t: (message.username = ''),\n\t\t\t\t\t(message.content = message.message)\n\t\t\t\t);\n\t\t\t});\n\t\t\tsetMessages(response.data.reverse());\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tconst JoinPrivateChannel = async (Channel: ChannelDto) => {\n\t\ttry {\n\t\t\tawait axios.post(\n\t\t\t\t'http://localhost:3333/chat/join/' + Channel.name,\n\t\t\t\t{ state: 'PRIVATE' },\n\t\t\t\t{ withCredentials: true }\n\t\t\t);\n\t\t\tsetSelectedChannel(Channel);\n\t\t\tgetMessages(Channel);\n\t\t\tsocket?.emit('join', {\n\t\t\t\tchannel: Channel.name,\n\t\t\t\tusername: connectedUser.username,\n\t\t\t});\n\t\t\tsetSaveChannel([...SaveChannel, Channel]);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tconst DeclineInvite = async (Channel: ChannelDto) => {\n\t\ttry {\n\t\t\taxios.delete('http://localhost:3333/chat/decline/' + Channel.name, {\n\t\t\t\twithCredentials: true,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t\tsetInvites(Invites.filter((channel) => channel.name !== Channel.name));\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{Invites.map((invite, index) => (\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"dm-list-element\"\n\t\t\t\t\tstyle={{ justifyContent: 'space-around' }}\n\t\t\t\t\tkey={index}>\n\t\t\t\t\t<h4>You are intive to {invite.channels.name}</h4>\n\t\t\t\t\t<span\n\t\t\t\t\t\tstyle={{ color: '#fdfad0' }}\n\t\t\t\t\t\tclassName=\"chat-accept-invite\"\n\t\t\t\t\t\tonClick={() => JoinPrivateChannel(invite.channels)}>\n\t\t\t\t\t\t&#10003;\n\t\t\t\t\t</span>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={close}\n\t\t\t\t\t\talt=\"decline invite\"\n\t\t\t\t\t\tonClick={() => DeclineInvite(invite.channels)}></img>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</>\n\t);\n}\n\nexport default Invite;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}