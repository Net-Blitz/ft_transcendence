{"ast":null,"code":"var _jsxFileName = \"/app/src/Messagerie/Channel/Aside/Aside.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useState, useCallback, useContext, useEffect, useRef } from 'react';\nimport './Aside.css';\nimport axios from 'axios';\n/* Interface */\nimport { ChannelsContext } from '../ChannelsUtils';\n/* Components */\nimport { PopUp } from '../../../Profile/Components/MainInfo/MainInfo';\nimport { ChannelPassword } from '../ChannelPassword';\nimport { NewChannel, UpdateChannel } from '../NewChannel/NewChannel';\nimport { BasicFrame } from '../../../Profile/Components/MiddleInfo/MiddleInfo';\n/* Ressources */\nimport controller from '../../Ressources/controller.svg';\nimport settings from '../../Ressources/settings.svg';\nimport add from '../../Ressources/add.svg';\nimport profile from '../../Ressources/profile.svg';\nimport { useSelector } from 'react-redux';\nimport { selectUserData } from '../../../utils/redux/selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ChannelButton = _ref => {\n  let {\n    icon,\n    onClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"channel-button\",\n      src: icon,\n      alt: \"icon\",\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_c = ChannelButton;\nconst ChannelListElement = _ref2 => {\n  _s();\n  let {\n    Channel,\n    userInfo,\n    socket\n  } = _ref2;\n  const [ban, setBan] = useState([]);\n  const [ChannelPasswordTrigger, setChannelPasswordTrigger] = useState(false);\n  const [ChannelSettingsTrigger, setChannelSettingsTrigger] = useState(false);\n  const {\n    setMessages,\n    SaveChannel,\n    selectedChannel,\n    setSelectedChannel\n  } = useContext(ChannelsContext);\n  const connectedUser = useSelector(selectUserData);\n  const getMessages = async () => {\n    try {\n      const response = await axios.get('http://localhost:3333/chat/channel/messages/' + Channel.id, {\n        withCredentials: true\n      });\n      response.data.map(message => {\n        return message.userId === (userInfo === null || userInfo === void 0 ? void 0 : userInfo.id) ? message.username = userInfo === null || userInfo === void 0 ? void 0 : userInfo.username : message.username = '', message.content = message.message;\n      });\n      setMessages(response.data.reverse());\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleSelectChannel = async channel => {\n    const response = await axios.get('http://localhost:3333/chat/ban/' + (userInfo === null || userInfo === void 0 ? void 0 : userInfo.username), {\n      withCredentials: true\n    });\n    setBan(response.data);\n    if (ban !== null && ban !== void 0 && ban.find(ban => ban.name === channel.name)) {\n      console.log('You are banned from this channel');\n      return;\n    }\n    if ((channel === null || channel === void 0 ? void 0 : channel.state) === 'PUBLIC') {\n      setSelectedChannel(channel);\n      getMessages();\n      socket === null || socket === void 0 ? void 0 : socket.emit('join', {\n        channel: channel.name,\n        username: userInfo === null || userInfo === void 0 ? void 0 : userInfo.username\n      });\n    } else if ((channel === null || channel === void 0 ? void 0 : channel.state) === 'PROTECTED') {\n      if (SaveChannel.find(savechannel => savechannel.name === channel.name) || connectedUser.id === channel.ownerId) {\n        setSelectedChannel(channel);\n        getMessages();\n        socket === null || socket === void 0 ? void 0 : socket.emit('join', {\n          channel: channel.name,\n          username: userInfo === null || userInfo === void 0 ? void 0 : userInfo.username\n        });\n      } else {\n        handleChannelPasswordTrigger();\n      }\n    } else if ((channel === null || channel === void 0 ? void 0 : channel.state) === 'PRIVATE') {\n      if (channel.ownerId === (userInfo === null || userInfo === void 0 ? void 0 : userInfo.id)) {\n        setSelectedChannel(channel);\n        socket === null || socket === void 0 ? void 0 : socket.emit('join', {\n          channel: channel.name,\n          username: userInfo === null || userInfo === void 0 ? void 0 : userInfo.username\n        });\n      } else if (SaveChannel.find(savechannel => savechannel.name === channel.name)) {\n        setSelectedChannel(channel);\n        socket === null || socket === void 0 ? void 0 : socket.emit('join', {\n          channel: channel.name,\n          username: userInfo === null || userInfo === void 0 ? void 0 : userInfo.username\n        });\n      } else {\n        console.log(\"You don't have access to this channel\");\n      }\n    }\n  };\n  const handleChannelPasswordTrigger = useCallback(() => {\n    setChannelPasswordTrigger(!ChannelPasswordTrigger);\n  }, [ChannelPasswordTrigger, setChannelPasswordTrigger]);\n  const handleChannelSettingsTrigger = useCallback(() => {\n    setChannelSettingsTrigger(!ChannelSettingsTrigger);\n  }, [ChannelSettingsTrigger, setChannelSettingsTrigger]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dm-list-element ${Channel.id === (selectedChannel === null || selectedChannel === void 0 ? void 0 : selectedChannel.id) && 'active'}`,\n      onClick: () => handleSelectChannel(Channel),\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: Channel.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 5\n      }, this), connectedUser.id === Channel.ownerId && /*#__PURE__*/_jsxDEV(ChannelButton, {\n        icon: settings,\n        onClick: handleChannelSettingsTrigger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n      trigger: ChannelSettingsTrigger,\n      children: /*#__PURE__*/_jsxDEV(UpdateChannel, {\n        handleNewDmTrigger: handleChannelSettingsTrigger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n      trigger: ChannelPasswordTrigger,\n      children: /*#__PURE__*/_jsxDEV(ChannelPassword, {\n        handleChannelPasswordTrigger: handleChannelPasswordTrigger,\n        Channel: Channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(ChannelListElement, \"Ud0PIJp+Q4lhK1JM/M2s/2dH29Q=\", false, function () {\n  return [useSelector];\n});\n_c2 = ChannelListElement;\nconst ChannelLists = _ref3 => {\n  _s2();\n  let {\n    userInfo,\n    socket\n  } = _ref3;\n  const {\n    ChannelList\n  } = useContext(ChannelsContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dm-list\",\n    children: ChannelList.map((Channel, index) => {\n      return /*#__PURE__*/_jsxDEV(ChannelListElement, {\n        Channel: Channel,\n        userInfo: userInfo,\n        socket: socket\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 6\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 3\n  }, this);\n};\n_s2(ChannelLists, \"kOr3vMsawseZWAOK+kuYC+tV9Lk=\");\n_c3 = ChannelLists;\nconst UserChannelElement = _ref4 => {\n  _s3();\n  let {\n    user,\n    channel,\n    isAdmin\n  } = _ref4;\n  const userConnected = useSelector(selectUserData);\n  const userIsAdmin = channel.ownerId === user.id || user.role === 'admin';\n  const [userSettingsTrigger, setUserSettingsTrigger] = useState(false);\n  const dropdown = useRef(null);\n  const handleUserSettingsTrigger = useCallback(() => {\n    setUserSettingsTrigger(!userSettingsTrigger);\n  }, [userSettingsTrigger, setUserSettingsTrigger]);\n\n  // useEffect(() => {\n  // \tconsole.log(userSettingsTrigger);\n  // \tif (userSettingsTrigger) {\n  // \t\twindow.onclick = (event: any) => {\n  // \t\t\tconsole.log(event.target);\n  // \t\t\tconsole.log(dropdown.current);\n  // \t\t\tif (event.target !== dropdown.current) {\n  // \t\t\t\tsetUserSettingsTrigger(false);\n  // \t\t\t}\n  // \t\t};\n  // \t}\n  // }, [setUserSettingsTrigger, dropdown, userSettingsTrigger]);\n\n  if (user.id === userConnected.id) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-channel-list-element\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: userIsAdmin ? 'dm-list-element-avatar admin-avatar' : 'dm-list-element-avatar',\n      src: 'http://localhost:3333/' + user.avatar,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: userIsAdmin ? 'admin' : undefined,\n      children: [user.username, ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-channel-list-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(ChannelButton, {\n        icon: controller\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ChannelButton, {\n        icon: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ChannelButton, {\n        icon: profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 5\n      }, this), (channel.ownerId === userConnected.id || user.role !== 'admin' && isAdmin === true) && /*#__PURE__*/_jsxDEV(ChannelButton, {\n        icon: settings,\n        onClick: handleUserSettingsTrigger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-settings-user-channel\",\n        style: {\n          display: userSettingsTrigger ? 'block' : 'none'\n        },\n        ref: dropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Op\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Mute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Kick\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Ban\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Block\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 3\n  }, this);\n};\n_s3(UserChannelElement, \"96pvO8pZDej9/w3bXty9Az8xHAk=\", false, function () {\n  return [useSelector];\n});\n_c4 = UserChannelElement;\nconst UserChannelList = _ref5 => {\n  _s4();\n  let {\n    channel\n  } = _ref5;\n  const [usersList, setUsersList] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const userConnected = useSelector(selectUserData);\n  useEffect(() => {\n    if (!channel.name) return;\n    const getUsers = async () => {\n      if (!channel) return;\n      const response = await axios.get('http://localhost:3333/chat/channel/' + channel.name, {\n        withCredentials: true\n      });\n      setUsersList(response.data.users);\n      response.data.users.forEach(user => {\n        if (user.id === userConnected.id && user.role === 'admin') {\n          setIsAdmin(true);\n        }\n      });\n    };\n    getUsers();\n    const interval = setInterval(getUsers, 2500);\n    return () => clearInterval(interval);\n  }, [channel, userConnected]);\n  return /*#__PURE__*/_jsxDEV(BasicFrame, {\n    title: \"In this channel\",\n    children: usersList.map((user, index) => /*#__PURE__*/_jsxDEV(UserChannelElement, {\n      user: user,\n      channel: channel,\n      isAdmin: isAdmin\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 3\n  }, this);\n};\n_s4(UserChannelList, \"IQ4fqXjLBgRP8Wa8b/P9ZvOBJr0=\", false, function () {\n  return [useSelector];\n});\n_c5 = UserChannelList;\nexport const Aside = _ref6 => {\n  _s5();\n  let {\n    buttonContent,\n    userInfo,\n    socket\n  } = _ref6;\n  const [newDmTrigger, setNewDmTrigger] = useState(false);\n  const {\n    selectedChannel\n  } = useContext(ChannelsContext);\n  const handleNewDmTrigger = useCallback(() => {\n    setNewDmTrigger(!newDmTrigger);\n  }, [newDmTrigger, setNewDmTrigger]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aside-channel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dm-aside\",\n      style: {\n        width: '100%',\n        height: '48%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-input\",\n        onClick: handleNewDmTrigger,\n        children: buttonContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ChannelLists, {\n        socket: socket,\n        userInfo: userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n        trigger: newDmTrigger,\n        children: /*#__PURE__*/_jsxDEV(NewChannel, {\n          handleNewDmTrigger: handleNewDmTrigger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(UserChannelList, {\n      channel: selectedChannel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 4\n    }, this), ' ']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 3\n  }, this);\n};\n_s5(Aside, \"YCEmvBq8zdz01LPJVEvsDM2O7cE=\");\n_c6 = Aside;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ChannelButton\");\n$RefreshReg$(_c2, \"ChannelListElement\");\n$RefreshReg$(_c3, \"ChannelLists\");\n$RefreshReg$(_c4, \"UserChannelElement\");\n$RefreshReg$(_c5, \"UserChannelList\");\n$RefreshReg$(_c6, \"Aside\");","map":{"version":3,"names":["React","useState","useCallback","useContext","useEffect","useRef","axios","ChannelsContext","PopUp","ChannelPassword","NewChannel","UpdateChannel","BasicFrame","controller","settings","add","profile","useSelector","selectUserData","jsxDEV","_jsxDEV","Fragment","_Fragment","ChannelButton","_ref","icon","onClick","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","ChannelListElement","_ref2","_s","Channel","userInfo","socket","ban","setBan","ChannelPasswordTrigger","setChannelPasswordTrigger","ChannelSettingsTrigger","setChannelSettingsTrigger","setMessages","SaveChannel","selectedChannel","setSelectedChannel","connectedUser","getMessages","response","get","id","withCredentials","data","map","message","userId","username","content","reverse","error","console","log","handleSelectChannel","channel","find","name","state","emit","savechannel","ownerId","handleChannelPasswordTrigger","handleChannelSettingsTrigger","trigger","handleNewDmTrigger","_c2","ChannelLists","_ref3","_s2","ChannelList","index","_c3","UserChannelElement","_ref4","_s3","user","isAdmin","userConnected","userIsAdmin","role","userSettingsTrigger","setUserSettingsTrigger","dropdown","handleUserSettingsTrigger","avatar","undefined","style","display","ref","_c4","UserChannelList","_ref5","_s4","usersList","setUsersList","setIsAdmin","getUsers","users","forEach","interval","setInterval","clearInterval","title","_c5","Aside","_ref6","_s5","buttonContent","newDmTrigger","setNewDmTrigger","width","height","_c6","$RefreshReg$"],"sources":["/app/src/Messagerie/Channel/Aside/Aside.tsx"],"sourcesContent":["import React, {\n\tuseState,\n\tuseCallback,\n\tuseContext,\n\tuseEffect,\n\tuseRef,\n} from 'react';\nimport './Aside.css';\nimport { Socket } from 'socket.io-client';\nimport axios from 'axios';\n/* Interface */\nimport { ChannelDto, ChannelsContext } from '../ChannelsUtils';\nimport { userInfoDto } from '../ChannelsUtils';\n/* Components */\nimport { PopUp } from '../../../Profile/Components/MainInfo/MainInfo';\nimport { ChannelPassword } from '../ChannelPassword';\nimport { NewChannel, UpdateChannel } from '../NewChannel/NewChannel';\nimport { BasicFrame } from '../../../Profile/Components/MiddleInfo/MiddleInfo';\n/* Ressources */\nimport controller from '../../Ressources/controller.svg';\nimport settings from '../../Ressources/settings.svg';\nimport add from '../../Ressources/add.svg';\nimport profile from '../../Ressources/profile.svg';\nimport { useSelector } from 'react-redux';\nimport { selectUserData } from '../../../utils/redux/selectors';\n\nexport const ChannelButton = ({\n\ticon,\n\tonClick,\n}: {\n\ticon: string;\n\tonClick?: any;\n}) => {\n\treturn (\n\t\t<>\n\t\t\t<img\n\t\t\t\tclassName=\"channel-button\"\n\t\t\t\tsrc={icon}\n\t\t\t\talt=\"icon\"\n\t\t\t\tonClick={onClick}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nconst ChannelListElement = ({\n\tChannel,\n\tuserInfo,\n\tsocket,\n}: {\n\tChannel: ChannelDto;\n\tuserInfo: userInfoDto | undefined;\n\tsocket: Socket;\n}) => {\n\tconst [ban, setBan] = useState<any[]>([]);\n\tconst [ChannelPasswordTrigger, setChannelPasswordTrigger] = useState(false);\n\tconst [ChannelSettingsTrigger, setChannelSettingsTrigger] = useState(false);\n\tconst { setMessages, SaveChannel, selectedChannel, setSelectedChannel } =\n\t\tuseContext(ChannelsContext);\n\tconst connectedUser = useSelector(selectUserData);\n\n\tconst getMessages = async () => {\n\t\ttry {\n\t\t\tconst response = await axios.get(\n\t\t\t\t'http://localhost:3333/chat/channel/messages/' + Channel.id,\n\t\t\t\t{ withCredentials: true }\n\t\t\t);\n\t\t\tresponse.data.map((message: any) => {\n\t\t\t\treturn (\n\t\t\t\t\tmessage.userId === userInfo?.id\n\t\t\t\t\t\t? (message.username = userInfo?.username)\n\t\t\t\t\t\t: (message.username = ''),\n\t\t\t\t\t(message.content = message.message)\n\t\t\t\t);\n\t\t\t});\n\t\t\tsetMessages(response.data.reverse());\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tconst handleSelectChannel = async (channel: ChannelDto) => {\n\t\tconst response = await axios.get(\n\t\t\t'http://localhost:3333/chat/ban/' + userInfo?.username,\n\t\t\t{ withCredentials: true }\n\t\t);\n\t\tsetBan(response.data);\n\t\tif (ban?.find((ban: any) => ban.name === channel.name)) {\n\t\t\tconsole.log('You are banned from this channel');\n\t\t\treturn;\n\t\t}\n\t\tif (channel?.state === 'PUBLIC') {\n\t\t\tsetSelectedChannel(channel);\n\t\t\tgetMessages();\n\t\t\tsocket?.emit('join', {\n\t\t\t\tchannel: channel.name,\n\t\t\t\tusername: userInfo?.username,\n\t\t\t});\n\t\t} else if (channel?.state === 'PROTECTED') {\n\t\t\tif (\n\t\t\t\tSaveChannel.find(\n\t\t\t\t\t(savechannel) => savechannel.name === channel.name\n\t\t\t\t) ||\n\t\t\t\tconnectedUser.id === channel.ownerId\n\t\t\t) {\n\t\t\t\tsetSelectedChannel(channel);\n\t\t\t\tgetMessages();\n\t\t\t\tsocket?.emit('join', {\n\t\t\t\t\tchannel: channel.name,\n\t\t\t\t\tusername: userInfo?.username,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\thandleChannelPasswordTrigger();\n\t\t\t}\n\t\t} else if (channel?.state === 'PRIVATE') {\n\t\t\tif (channel.ownerId === userInfo?.id) {\n\t\t\t\tsetSelectedChannel(channel);\n\t\t\t\tsocket?.emit('join', {\n\t\t\t\t\tchannel: channel.name,\n\t\t\t\t\tusername: userInfo?.username,\n\t\t\t\t});\n\t\t\t} else if (\n\t\t\t\tSaveChannel.find(\n\t\t\t\t\t(savechannel) => savechannel.name === channel.name\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tsetSelectedChannel(channel);\n\t\t\t\tsocket?.emit('join', {\n\t\t\t\t\tchannel: channel.name,\n\t\t\t\t\tusername: userInfo?.username,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log(\"You don't have access to this channel\");\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleChannelPasswordTrigger = useCallback(() => {\n\t\tsetChannelPasswordTrigger(!ChannelPasswordTrigger);\n\t}, [ChannelPasswordTrigger, setChannelPasswordTrigger]);\n\n\tconst handleChannelSettingsTrigger = useCallback(() => {\n\t\tsetChannelSettingsTrigger(!ChannelSettingsTrigger);\n\t}, [ChannelSettingsTrigger, setChannelSettingsTrigger]);\n\n\treturn (\n\t\t<>\n\t\t\t<div\n\t\t\t\tclassName={`dm-list-element ${\n\t\t\t\t\tChannel.id === selectedChannel?.id && 'active'\n\t\t\t\t}`}\n\t\t\t\tonClick={() => handleSelectChannel(Channel)}>\n\t\t\t\t<h4>{Channel.name}</h4>\n\t\t\t\t{connectedUser.id === Channel.ownerId && (\n\t\t\t\t\t<ChannelButton\n\t\t\t\t\t\ticon={settings}\n\t\t\t\t\t\tonClick={handleChannelSettingsTrigger}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<PopUp trigger={ChannelSettingsTrigger}>\n\t\t\t\t<UpdateChannel\n\t\t\t\t\thandleNewDmTrigger={handleChannelSettingsTrigger}\n\t\t\t\t/>\n\t\t\t</PopUp>\n\t\t\t<PopUp trigger={ChannelPasswordTrigger}>\n\t\t\t\t<ChannelPassword\n\t\t\t\t\thandleChannelPasswordTrigger={handleChannelPasswordTrigger}\n\t\t\t\t\tChannel={Channel}\n\t\t\t\t/>\n\t\t\t</PopUp>\n\t\t</>\n\t);\n};\n\nconst ChannelLists = ({\n\tuserInfo,\n\tsocket,\n}: {\n\tuserInfo: userInfoDto | undefined;\n\tsocket: Socket;\n}) => {\n\tconst { ChannelList } = useContext(ChannelsContext);\n\n\treturn (\n\t\t<div className=\"dm-list\">\n\t\t\t{ChannelList.map((Channel, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ChannelListElement\n\t\t\t\t\t\tChannel={Channel}\n\t\t\t\t\t\tuserInfo={userInfo}\n\t\t\t\t\t\tsocket={socket}\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nconst UserChannelElement = ({\n\tuser,\n\tchannel,\n\tisAdmin,\n}: {\n\tuser: userInfoDto;\n\tchannel: ChannelDto;\n\tisAdmin: boolean;\n}) => {\n\tconst userConnected = useSelector(selectUserData);\n\tconst userIsAdmin = channel.ownerId === user.id || user.role === 'admin';\n\tconst [userSettingsTrigger, setUserSettingsTrigger] = useState(false);\n\tconst dropdown = useRef(null);\n\n\tconst handleUserSettingsTrigger = useCallback(() => {\n\t\tsetUserSettingsTrigger(!userSettingsTrigger);\n\t}, [userSettingsTrigger, setUserSettingsTrigger]);\n\n\t// useEffect(() => {\n\t// \tconsole.log(userSettingsTrigger);\n\t// \tif (userSettingsTrigger) {\n\t// \t\twindow.onclick = (event: any) => {\n\t// \t\t\tconsole.log(event.target);\n\t// \t\t\tconsole.log(dropdown.current);\n\t// \t\t\tif (event.target !== dropdown.current) {\n\t// \t\t\t\tsetUserSettingsTrigger(false);\n\t// \t\t\t}\n\t// \t\t};\n\t// \t}\n\t// }, [setUserSettingsTrigger, dropdown, userSettingsTrigger]);\n\n\tif (user.id === userConnected.id) return <></>;\n\n\treturn (\n\t\t<div className=\"user-channel-list-element\">\n\t\t\t<img\n\t\t\t\tclassName={\n\t\t\t\t\tuserIsAdmin\n\t\t\t\t\t\t? 'dm-list-element-avatar admin-avatar'\n\t\t\t\t\t\t: 'dm-list-element-avatar'\n\t\t\t\t}\n\t\t\t\tsrc={'http://localhost:3333/' + user.avatar}\n\t\t\t\talt=\"\"\n\t\t\t/>\n\t\t\t<h4 className={userIsAdmin ? 'admin' : undefined}>\n\t\t\t\t{user.username}{' '}\n\t\t\t\t{/* user.role ==> \"user\" || \"admin\" || \"owner\"*/}\n\t\t\t</h4>\n\t\t\t<div className=\"user-channel-list-buttons\">\n\t\t\t\t<ChannelButton icon={controller} />\n\t\t\t\t<ChannelButton icon={add} />\n\t\t\t\t<ChannelButton icon={profile} />\n\t\t\t\t{(channel.ownerId === userConnected.id ||\n\t\t\t\t\t(user.role !== 'admin' && isAdmin === true)) && (\n\t\t\t\t\t<ChannelButton\n\t\t\t\t\t\ticon={settings}\n\t\t\t\t\t\tonClick={handleUserSettingsTrigger}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"dropdown-settings-user-channel\"\n\t\t\t\t\tstyle={{ display: userSettingsTrigger ? 'block' : 'none' }}\n\t\t\t\t\tref={dropdown}>\n\t\t\t\t\t<p>Op</p>\n\t\t\t\t\t<p>Mute</p>\n\t\t\t\t\t<p>Kick</p>\n\t\t\t\t\t<p>Ban</p>\n\t\t\t\t\t<p>Block</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst UserChannelList = ({ channel }: { channel: ChannelDto }) => {\n\tconst [usersList, setUsersList] = useState<userInfoDto[]>([]);\n\tconst [isAdmin, setIsAdmin] = useState(false);\n\tconst userConnected = useSelector(selectUserData);\n\n\tuseEffect(() => {\n\t\tif (!channel.name) return;\n\t\tconst getUsers = async () => {\n\t\t\tif (!channel) return;\n\t\t\tconst response = await axios.get(\n\t\t\t\t'http://localhost:3333/chat/channel/' + channel.name,\n\t\t\t\t{ withCredentials: true }\n\t\t\t);\n\t\t\tsetUsersList(response.data.users);\n\t\t\tresponse.data.users.forEach((user: userInfoDto) => {\n\t\t\t\tif (user.id === userConnected.id && user.role === 'admin') {\n\t\t\t\t\tsetIsAdmin(true);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\tgetUsers();\n\t\tconst interval = setInterval(getUsers, 2500);\n\t\treturn () => clearInterval(interval);\n\t}, [channel, userConnected]);\n\n\treturn (\n\t\t<BasicFrame title=\"In this channel\">\n\t\t\t{usersList.map((user, index) => (\n\t\t\t\t<UserChannelElement\n\t\t\t\t\tuser={user}\n\t\t\t\t\tkey={index}\n\t\t\t\t\tchannel={channel}\n\t\t\t\t\tisAdmin={isAdmin}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</BasicFrame>\n\t);\n};\n\nexport const Aside = ({\n\tbuttonContent,\n\tuserInfo,\n\tsocket,\n}: {\n\tbuttonContent: string;\n\tuserInfo: userInfoDto | undefined;\n\tsocket: Socket;\n}) => {\n\tconst [newDmTrigger, setNewDmTrigger] = useState(false);\n\tconst { selectedChannel } = useContext(ChannelsContext);\n\n\tconst handleNewDmTrigger = useCallback(() => {\n\t\tsetNewDmTrigger(!newDmTrigger);\n\t}, [newDmTrigger, setNewDmTrigger]);\n\n\treturn (\n\t\t<div className=\"aside-channel\">\n\t\t\t<div className=\"dm-aside\" style={{ width: '100%', height: '48%' }}>\n\t\t\t\t<button className=\"new-input\" onClick={handleNewDmTrigger}>\n\t\t\t\t\t{buttonContent}\n\t\t\t\t</button>\n\t\t\t\t<ChannelLists socket={socket} userInfo={userInfo} />\n\t\t\t\t<PopUp trigger={newDmTrigger}>\n\t\t\t\t\t<NewChannel handleNewDmTrigger={handleNewDmTrigger} />\n\t\t\t\t</PopUp>\n\t\t\t</div>\n\t\t\t<UserChannelList channel={selectedChannel} />{' '}\n\t\t</div>\n\t);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}