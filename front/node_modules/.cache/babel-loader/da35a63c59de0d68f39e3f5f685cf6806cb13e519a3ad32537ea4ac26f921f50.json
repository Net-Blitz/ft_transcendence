{"ast":null,"code":"var _jsxFileName = \"/app/src/Messagerie/Channel/ChannelsUtils.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChannelsContext = /*#__PURE__*/createContext({\n  messages: [],\n  setMessages: () => {},\n  SaveChannel: [],\n  setSaveChannel: () => {},\n  ChannelList: [],\n  setChannelList: () => {},\n  selectedChannel: {\n    id: 0,\n    name: '',\n    state: '',\n    ownerId: 0\n  },\n  setSelectedChannel: () => {}\n});\nexport const ChannelsProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [SaveChannel, setSaveChannel] = useState([]);\n  const [ChannelList, setChannelList] = useState([]);\n  const [selectedChannel, setSelectedChannel] = useState({\n    id: 0,\n    name: '',\n    state: '',\n    ownerId: 0\n  });\n  useEffect(() => {\n    const fetchChats = async () => {\n      try {\n        const Channels = await axios.get('http://localhost:3333/chat/channels', {\n          withCredentials: true\n        });\n        setChannelList(Channels.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchChats();\n    const interval = setInterval(fetchChats, 2500);\n    return () => clearInterval(interval);\n  }, [setChannelList]);\n  return /*#__PURE__*/_jsxDEV(ChannelsContext.Provider, {\n    value: {\n      messages,\n      setMessages,\n      SaveChannel,\n      setSaveChannel,\n      ChannelList,\n      setChannelList,\n      selectedChannel,\n      setSelectedChannel\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }, this);\n};\n_s(ChannelsProvider, \"o4weFYY4v7mgX1cZVqeq9seNSkY=\");\n_c = ChannelsProvider;\nvar _c;\n$RefreshReg$(_c, \"ChannelsProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","axios","jsxDEV","_jsxDEV","ChannelsContext","messages","setMessages","SaveChannel","setSaveChannel","ChannelList","setChannelList","selectedChannel","id","name","state","ownerId","setSelectedChannel","ChannelsProvider","_ref","_s","children","fetchChats","Channels","get","withCredentials","data","error","console","interval","setInterval","clearInterval","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/Messagerie/Channel/ChannelsUtils.tsx"],"sourcesContent":["import { ReactNode, createContext, useEffect, useState } from 'react';\nimport { MessageDto } from '../../Chat/Messages';\nimport axios from 'axios';\n\nexport interface ChannelDto {\n\tid: number;\n\tname: string;\n\tstate: string;\n\townerId: number;\n}\n\nexport interface userInfoDto {\n\tid: number;\n\tusername: string;\n\tavatar: string;\n\trole?: string;\n}\n\ntype ChannelsContextType = {\n\tmessages: MessageDto[];\n\tsetMessages: React.Dispatch<React.SetStateAction<MessageDto[]>>;\n\tSaveChannel: ChannelDto[];\n\tsetSaveChannel: React.Dispatch<React.SetStateAction<ChannelDto[]>>;\n\tChannelList: ChannelDto[];\n\tsetChannelList: React.Dispatch<React.SetStateAction<ChannelDto[]>>;\n\tselectedChannel: ChannelDto;\n\tsetSelectedChannel: React.Dispatch<React.SetStateAction<ChannelDto>>;\n};\n\nexport const ChannelsContext = createContext<ChannelsContextType>({\n\tmessages: [],\n\tsetMessages: () => {},\n\tSaveChannel: [],\n\tsetSaveChannel: () => {},\n\tChannelList: [],\n\tsetChannelList: () => {},\n\tselectedChannel: { id: 0, name: '', state: '', ownerId: 0 },\n\tsetSelectedChannel: () => {},\n});\n\nexport const ChannelsProvider = ({ children }: { children: ReactNode }) => {\n\tconst [messages, setMessages] = useState<MessageDto[]>([]);\n\tconst [SaveChannel, setSaveChannel] = useState<ChannelDto[]>([]);\n\tconst [ChannelList, setChannelList] = useState<ChannelDto[]>([]);\n\tconst [selectedChannel, setSelectedChannel] = useState<ChannelDto>({\n\t\tid: 0,\n\t\tname: '',\n\t\tstate: '',\n\t\townerId: 0,\n\t});\n\n\tuseEffect(() => {\n\t\tconst fetchChats = async () => {\n\t\t\ttry {\n\t\t\t\tconst Channels = await axios.get<ChannelDto[]>(\n\t\t\t\t\t'http://localhost:3333/chat/channels',\n\t\t\t\t\t{ withCredentials: true }\n\t\t\t\t);\n\t\t\t\tsetChannelList(Channels.data);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t};\n\n\t\tfetchChats();\n\t\tconst interval = setInterval(fetchChats, 2500);\n\t\treturn () => clearInterval(interval);\n\t}, [setChannelList]);\n\n\treturn (\n\t\t<ChannelsContext.Provider\n\t\t\tvalue={{\n\t\t\t\tmessages,\n\t\t\t\tsetMessages,\n\t\t\t\tSaveChannel,\n\t\t\t\tsetSaveChannel,\n\t\t\t\tChannelList,\n\t\t\t\tsetChannelList,\n\t\t\t\tselectedChannel,\n\t\t\t\tsetSelectedChannel,\n\t\t\t}}>\n\t\t\t{children}\n\t\t</ChannelsContext.Provider>\n\t);\n};\n"],"mappings":";;AAAA,SAAoBA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAErE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA2B1B,OAAO,MAAMC,eAAe,gBAAGN,aAAa,CAAsB;EACjEO,QAAQ,EAAE,EAAE;EACZC,WAAW,EAAEA,CAAA,KAAM,CAAC,CAAC;EACrBC,WAAW,EAAE,EAAE;EACfC,cAAc,EAAEA,CAAA,KAAM,CAAC,CAAC;EACxBC,WAAW,EAAE,EAAE;EACfC,cAAc,EAAEA,CAAA,KAAM,CAAC,CAAC;EACxBC,eAAe,EAAE;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAE,CAAC;EAC3DC,kBAAkB,EAAEA,CAAA,KAAM,CAAC;AAC5B,CAAC,CAAC;AAEF,OAAO,MAAMC,gBAAgB,GAAGC,IAAA,IAA2C;EAAAC,EAAA;EAAA,IAA1C;IAAEC;EAAkC,CAAC,GAAAF,IAAA;EACrE,MAAM,CAACb,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAe,EAAE,CAAC;EAC1D,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAe,EAAE,CAAC;EAChE,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAe,EAAE,CAAC;EAChE,MAAM,CAACW,eAAe,EAAEK,kBAAkB,CAAC,GAAGhB,QAAQ,CAAa;IAClEY,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACV,CAAC,CAAC;EAEFhB,SAAS,CAAC,MAAM;IACf,MAAMsB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACH,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAC/B,qCAAqC,EACrC;UAAEC,eAAe,EAAE;QAAK,CAAC,CACzB;QACDd,cAAc,CAACY,QAAQ,CAACG,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACfC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACrB;IACD,CAAC;IAEDL,UAAU,EAAE;IACZ,MAAMO,QAAQ,GAAGC,WAAW,CAACR,UAAU,EAAE,IAAI,CAAC;IAC9C,OAAO,MAAMS,aAAa,CAACF,QAAQ,CAAC;EACrC,CAAC,EAAE,CAAClB,cAAc,CAAC,CAAC;EAEpB,oBACCP,OAAA,CAACC,eAAe,CAAC2B,QAAQ;IACxBC,KAAK,EAAE;MACN3B,QAAQ;MACRC,WAAW;MACXC,WAAW;MACXC,cAAc;MACdC,WAAW;MACXC,cAAc;MACdC,eAAe;MACfK;IACD,CAAE;IAAAI,QAAA,EACDA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACiB;AAE7B,CAAC;AAACjB,EAAA,CA5CWF,gBAAgB;AAAAoB,EAAA,GAAhBpB,gBAAgB;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}