{"ast":null,"code":"import * as svgUtils from './utils/svg.js';\nimport { merge as mergeOptions } from './utils/options.js';\nimport { create as createPrng } from './utils/prng.js';\nimport * as license from './utils/license.js';\nimport { toFormat } from '@dicebear/converter';\nimport { getBackgroundColors } from './utils/color.js';\nexport function createAvatar(style) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _a, _b, _c, _d, _e;\n  options = mergeOptions(style, options);\n  const prng = createPrng(options.seed);\n  const result = style.create({\n    prng: prng,\n    options\n  });\n  const {\n    primary: primaryBackgroundColor,\n    secondary: secondaryBackgroundColor\n  } = getBackgroundColors(prng, (_a = options.backgroundColor) !== null && _a !== void 0 ? _a : []);\n  const backgroundType = prng.pick((_b = options.backgroundType) !== null && _b !== void 0 ? _b : [], 'solid');\n  const backgroundRotation = prng.integer(((_c = options.backgroundRotation) === null || _c === void 0 ? void 0 : _c.length) ? Math.min(...options.backgroundRotation) : 0, ((_d = options.backgroundRotation) === null || _d === void 0 ? void 0 : _d.length) ? Math.max(...options.backgroundRotation) : 0);\n  if (options.size) {\n    result.attributes.width = options.size.toString();\n    result.attributes.height = options.size.toString();\n  }\n  if (options.scale !== undefined && options.scale !== 100) {\n    result.body = svgUtils.addScale(result, options.scale);\n  }\n  if (options.flip) {\n    result.body = svgUtils.addFlip(result);\n  }\n  if (options.rotate) {\n    result.body = svgUtils.addRotate(result, options.rotate);\n  }\n  if (options.translateX || options.translateY) {\n    result.body = svgUtils.addTranslate(result, options.translateX, options.translateY);\n  }\n  if (primaryBackgroundColor !== 'transparent' && secondaryBackgroundColor !== 'transparent') {\n    result.body = svgUtils.addBackground(result, primaryBackgroundColor, secondaryBackgroundColor, backgroundType, backgroundRotation);\n  }\n  if (options.radius || options.clip) {\n    result.body = svgUtils.addViewboxMask(result, (_e = options.radius) !== null && _e !== void 0 ? _e : 0);\n  }\n  if (options.randomizeIds) {\n    // Reduces the occurrence of ID collisions when rendering multiple avatars on one HTML page.\n    result.body = svgUtils.randomizeIds(result);\n  }\n  const attributes = svgUtils.createAttrString(result);\n  const metadata = license.xml(style);\n  const exif = license.exif(style);\n  const svg = `<svg ${attributes}>${metadata}${result.body}</svg>`;\n  return {\n    toString: () => svg,\n    toJson: () => {\n      var _a;\n      return {\n        svg: svg,\n        extra: {\n          primaryBackgroundColor,\n          secondaryBackgroundColor,\n          backgroundType,\n          backgroundRotation,\n          ...((_a = result.extra) === null || _a === void 0 ? void 0 : _a.call(result))\n        }\n      };\n    },\n    toDataUriSync: () => {\n      return `data:image/svg+xml;utf8,${encodeURIComponent(svg)}`;\n    },\n    ...toFormat(svg, 'svg'),\n    png: function () {\n      let {\n        includeExif = false\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return toFormat(svg, 'png', includeExif ? exif : undefined);\n    },\n    jpeg: function () {\n      let {\n        includeExif = false\n      } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return toFormat(svg, 'jpeg', includeExif ? exif : undefined);\n    }\n  };\n}","map":{"version":3,"names":["svgUtils","merge","mergeOptions","create","createPrng","license","toFormat","getBackgroundColors","createAvatar","style","options","arguments","length","undefined","_a","_b","_c","_d","_e","prng","seed","result","primary","primaryBackgroundColor","secondary","secondaryBackgroundColor","backgroundColor","backgroundType","pick","backgroundRotation","integer","Math","min","max","size","attributes","width","toString","height","scale","body","addScale","flip","addFlip","rotate","addRotate","translateX","translateY","addTranslate","addBackground","radius","clip","addViewboxMask","randomizeIds","createAttrString","metadata","xml","exif","svg","toJson","extra","call","toDataUriSync","encodeURIComponent","png","includeExif","jpeg"],"sources":["/app/node_modules/@dicebear/core/lib/core.js"],"sourcesContent":["import * as svgUtils from './utils/svg.js';\nimport { merge as mergeOptions } from './utils/options.js';\nimport { create as createPrng } from './utils/prng.js';\nimport * as license from './utils/license.js';\nimport { toFormat } from '@dicebear/converter';\nimport { getBackgroundColors } from './utils/color.js';\nexport function createAvatar(style, options = {}) {\n    var _a, _b, _c, _d, _e;\n    options = mergeOptions(style, options);\n    const prng = createPrng(options.seed);\n    const result = style.create({ prng: prng, options });\n    const { primary: primaryBackgroundColor, secondary: secondaryBackgroundColor, } = getBackgroundColors(prng, (_a = options.backgroundColor) !== null && _a !== void 0 ? _a : []);\n    const backgroundType = prng.pick((_b = options.backgroundType) !== null && _b !== void 0 ? _b : [], 'solid');\n    const backgroundRotation = prng.integer(((_c = options.backgroundRotation) === null || _c === void 0 ? void 0 : _c.length) ? Math.min(...options.backgroundRotation) : 0, ((_d = options.backgroundRotation) === null || _d === void 0 ? void 0 : _d.length) ? Math.max(...options.backgroundRotation) : 0);\n    if (options.size) {\n        result.attributes.width = options.size.toString();\n        result.attributes.height = options.size.toString();\n    }\n    if (options.scale !== undefined && options.scale !== 100) {\n        result.body = svgUtils.addScale(result, options.scale);\n    }\n    if (options.flip) {\n        result.body = svgUtils.addFlip(result);\n    }\n    if (options.rotate) {\n        result.body = svgUtils.addRotate(result, options.rotate);\n    }\n    if (options.translateX || options.translateY) {\n        result.body = svgUtils.addTranslate(result, options.translateX, options.translateY);\n    }\n    if (primaryBackgroundColor !== 'transparent' &&\n        secondaryBackgroundColor !== 'transparent') {\n        result.body = svgUtils.addBackground(result, primaryBackgroundColor, secondaryBackgroundColor, backgroundType, backgroundRotation);\n    }\n    if (options.radius || options.clip) {\n        result.body = svgUtils.addViewboxMask(result, (_e = options.radius) !== null && _e !== void 0 ? _e : 0);\n    }\n    if (options.randomizeIds) {\n        // Reduces the occurrence of ID collisions when rendering multiple avatars on one HTML page.\n        result.body = svgUtils.randomizeIds(result);\n    }\n    const attributes = svgUtils.createAttrString(result);\n    const metadata = license.xml(style);\n    const exif = license.exif(style);\n    const svg = `<svg ${attributes}>${metadata}${result.body}</svg>`;\n    return {\n        toString: () => svg,\n        toJson: () => {\n            var _a;\n            return ({\n                svg: svg,\n                extra: {\n                    primaryBackgroundColor,\n                    secondaryBackgroundColor,\n                    backgroundType,\n                    backgroundRotation,\n                    ...(_a = result.extra) === null || _a === void 0 ? void 0 : _a.call(result),\n                },\n            });\n        },\n        toDataUriSync: () => {\n            return `data:image/svg+xml;utf8,${encodeURIComponent(svg)}`;\n        },\n        ...toFormat(svg, 'svg'),\n        png: ({ includeExif = false } = {}) => {\n            return toFormat(svg, 'png', includeExif ? exif : undefined);\n        },\n        jpeg: ({ includeExif = false } = {}) => {\n            return toFormat(svg, 'jpeg', includeExif ? exif : undefined);\n        },\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}