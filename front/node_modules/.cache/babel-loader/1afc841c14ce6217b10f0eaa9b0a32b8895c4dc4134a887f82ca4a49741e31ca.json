{"ast":null,"code":"/*!\n * DiceBear Initials (@dicebear/initials)\n *\n * Code licensed under MIT (https://github.com/dicebear/dicebear/blob/v4/packages/initials/LICENSE)\n * Copyright (c) 2023 Florian Körner\n */\nimport { getInitials } from './utils/initials.js';\nimport { convertColor } from './utils/convertColor.js';\nexport const meta = {\n  title: 'Initials',\n  creator: 'Florian Körner',\n  source: 'https://github.com/dicebear/dicebear',\n  license: {\n    name: 'CC0 1.0',\n    url: 'https://creativecommons.org/publicdomain/zero/1.0/'\n  }\n};\nexport const create = _ref => {\n  let {\n    prng,\n    options\n  } = _ref;\n  var _a, _b, _c, _d, _e, _f, _g;\n  const fontFamily = (_b = (_a = options.fontFamily) === null || _a === void 0 ? void 0 : _a.join(', ')) !== null && _b !== void 0 ? _b : 'Arial, sans-serif';\n  const fontSize = (_c = options.fontSize) !== null && _c !== void 0 ? _c : 50;\n  const fontWeight = (_d = options.fontWeight) !== null && _d !== void 0 ? _d : 400;\n  const textColor = convertColor((_f = prng.pick((_e = options.textColor) !== null && _e !== void 0 ? _e : [])) !== null && _f !== void 0 ? _f : 'ffffff');\n  const initials = getInitials(prng.seed.trim()).slice(0, (_g = options.chars) !== null && _g !== void 0 ? _g : 2);\n  // prettier-ignore\n  const svg = [`<text x=\"50%\" y=\"50%\" font-family=\"${fontFamily}\" font-size=\"${fontSize}\" font-weight=\"${fontWeight}\" fill=\"${textColor}\" text-anchor=\"middle\" dy=\"${(fontSize * .356).toFixed(3)}\">${initials}</text>`].join('');\n  return {\n    attributes: {\n      viewBox: '0 0 100 100'\n    },\n    body: svg,\n    extra: () => ({\n      fontFamily,\n      fontSize,\n      fontWeight,\n      textColor,\n      initials\n    })\n  };\n};\nexport { schema } from './schema.js';","map":{"version":3,"names":["getInitials","convertColor","meta","title","creator","source","license","name","url","create","_ref","prng","options","_a","_b","_c","_d","_e","_f","_g","fontFamily","join","fontSize","fontWeight","textColor","pick","initials","seed","trim","slice","chars","svg","toFixed","attributes","viewBox","body","extra","schema"],"sources":["/app/node_modules/@dicebear/initials/lib/index.js"],"sourcesContent":["/*!\n * DiceBear Initials (@dicebear/initials)\n *\n * Code licensed under MIT (https://github.com/dicebear/dicebear/blob/v4/packages/initials/LICENSE)\n * Copyright (c) 2023 Florian Körner\n */\nimport { getInitials } from './utils/initials.js';\nimport { convertColor } from './utils/convertColor.js';\nexport const meta = {\n    title: 'Initials',\n    creator: 'Florian Körner',\n    source: 'https://github.com/dicebear/dicebear',\n    license: {\n        name: 'CC0 1.0',\n        url: 'https://creativecommons.org/publicdomain/zero/1.0/',\n    },\n};\nexport const create = ({ prng, options }) => {\n    var _a, _b, _c, _d, _e, _f, _g;\n    const fontFamily = (_b = (_a = options.fontFamily) === null || _a === void 0 ? void 0 : _a.join(', ')) !== null && _b !== void 0 ? _b : 'Arial, sans-serif';\n    const fontSize = (_c = options.fontSize) !== null && _c !== void 0 ? _c : 50;\n    const fontWeight = (_d = options.fontWeight) !== null && _d !== void 0 ? _d : 400;\n    const textColor = convertColor((_f = prng.pick((_e = options.textColor) !== null && _e !== void 0 ? _e : [])) !== null && _f !== void 0 ? _f : 'ffffff');\n    const initials = getInitials(prng.seed.trim()).slice(0, (_g = options.chars) !== null && _g !== void 0 ? _g : 2);\n    // prettier-ignore\n    const svg = [\n        `<text x=\"50%\" y=\"50%\" font-family=\"${fontFamily}\" font-size=\"${fontSize}\" font-weight=\"${fontWeight}\" fill=\"${textColor}\" text-anchor=\"middle\" dy=\"${(fontSize * .356).toFixed(3)}\">${initials}</text>`,\n    ].join('');\n    return {\n        attributes: {\n            viewBox: '0 0 100 100',\n        },\n        body: svg,\n        extra: () => ({\n            fontFamily,\n            fontSize,\n            fontWeight,\n            textColor,\n            initials\n        })\n    };\n};\nexport { schema } from './schema.js';\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,WAAW,QAAQ,qBAAqB;AACjD,SAASC,YAAY,QAAQ,yBAAyB;AACtD,OAAO,MAAMC,IAAI,GAAG;EAChBC,KAAK,EAAE,UAAU;EACjBC,OAAO,EAAE,gBAAgB;EACzBC,MAAM,EAAE,sCAAsC;EAC9CC,OAAO,EAAE;IACLC,IAAI,EAAE,SAAS;IACfC,GAAG,EAAE;EACT;AACJ,CAAC;AACD,OAAO,MAAMC,MAAM,GAAGC,IAAA,IAAuB;EAAA,IAAtB;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EACpC,IAAIG,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE;EAC9B,MAAMC,UAAU,GAAG,CAACN,EAAE,GAAG,CAACD,EAAE,GAAGD,OAAO,CAACQ,UAAU,MAAM,IAAI,IAAIP,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACQ,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,IAAIP,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,mBAAmB;EAC3J,MAAMQ,QAAQ,GAAG,CAACP,EAAE,GAAGH,OAAO,CAACU,QAAQ,MAAM,IAAI,IAAIP,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE;EAC5E,MAAMQ,UAAU,GAAG,CAACP,EAAE,GAAGJ,OAAO,CAACW,UAAU,MAAM,IAAI,IAAIP,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,GAAG;EACjF,MAAMQ,SAAS,GAAGvB,YAAY,CAAC,CAACiB,EAAE,GAAGP,IAAI,CAACc,IAAI,CAAC,CAACR,EAAE,GAAGL,OAAO,CAACY,SAAS,MAAM,IAAI,IAAIP,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE,CAAC,MAAM,IAAI,IAAIC,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,QAAQ,CAAC;EACxJ,MAAMQ,QAAQ,GAAG1B,WAAW,CAACW,IAAI,CAACgB,IAAI,CAACC,IAAI,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAACV,EAAE,GAAGP,OAAO,CAACkB,KAAK,MAAM,IAAI,IAAIX,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC;EAChH;EACA,MAAMY,GAAG,GAAG,CACP,sCAAqCX,UAAW,gBAAeE,QAAS,kBAAiBC,UAAW,WAAUC,SAAU,8BAA6B,CAACF,QAAQ,GAAG,IAAI,EAAEU,OAAO,CAAC,CAAC,CAAE,KAAIN,QAAS,SAAQ,CAC3M,CAACL,IAAI,CAAC,EAAE,CAAC;EACV,OAAO;IACHY,UAAU,EAAE;MACRC,OAAO,EAAE;IACb,CAAC;IACDC,IAAI,EAAEJ,GAAG;IACTK,KAAK,EAAEA,CAAA,MAAO;MACVhB,UAAU;MACVE,QAAQ;MACRC,UAAU;MACVC,SAAS;MACTE;IACJ,CAAC;EACL,CAAC;AACL,CAAC;AACD,SAASW,MAAM,QAAQ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}