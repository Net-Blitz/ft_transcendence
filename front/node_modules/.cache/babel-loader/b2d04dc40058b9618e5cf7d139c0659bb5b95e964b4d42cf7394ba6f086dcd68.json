{"ast":null,"code":"/**\n * Do not change this file manually! This file was generated with the \"Dicebear Exporter\"-Plugin for Figma.\n *\n * Plugin: https://www.figma.com/community/plugin/1005765655729342787\n * File: https://www.figma.com/file/YHb4ShTgmO8Lqhkz1plLfL\n */\nimport { pickComponent } from './pickComponent.js';\nexport function getComponents(_ref) {\n  let {\n    prng,\n    options\n  } = _ref;\n  const baseComponent = pickComponent({\n    prng,\n    group: 'base',\n    values: options.base\n  });\n  const mouthComponent = pickComponent({\n    prng,\n    group: 'mouth',\n    values: options.mouth\n  });\n  const eyebrowsComponent = pickComponent({\n    prng,\n    group: 'eyebrows',\n    values: options.eyebrows\n  });\n  const hairComponent = pickComponent({\n    prng,\n    group: 'hair',\n    values: options.hair\n  });\n  const eyesComponent = pickComponent({\n    prng,\n    group: 'eyes',\n    values: options.eyes\n  });\n  const noseComponent = pickComponent({\n    prng,\n    group: 'nose',\n    values: options.nose\n  });\n  const earsComponent = pickComponent({\n    prng,\n    group: 'ears',\n    values: options.ears\n  });\n  const shirtComponent = pickComponent({\n    prng,\n    group: 'shirt',\n    values: options.shirt\n  });\n  const earringsComponent = pickComponent({\n    prng,\n    group: 'earrings',\n    values: options.earrings\n  });\n  const glassesComponent = pickComponent({\n    prng,\n    group: 'glasses',\n    values: options.glasses\n  });\n  const facialHairComponent = pickComponent({\n    prng,\n    group: 'facialHair',\n    values: options.facialHair\n  });\n  return {\n    'base': baseComponent,\n    'mouth': mouthComponent,\n    'eyebrows': eyebrowsComponent,\n    'hair': prng.bool(options.hairProbability) ? hairComponent : undefined,\n    'eyes': eyesComponent,\n    'nose': noseComponent,\n    'ears': earsComponent,\n    'shirt': shirtComponent,\n    'earrings': prng.bool(options.earringsProbability) ? earringsComponent : undefined,\n    'glasses': prng.bool(options.glassesProbability) ? glassesComponent : undefined,\n    'facialHair': prng.bool(options.facialHairProbability) ? facialHairComponent : undefined\n  };\n}\n;","map":{"version":3,"names":["pickComponent","getComponents","_ref","prng","options","baseComponent","group","values","base","mouthComponent","mouth","eyebrowsComponent","eyebrows","hairComponent","hair","eyesComponent","eyes","noseComponent","nose","earsComponent","ears","shirtComponent","shirt","earringsComponent","earrings","glassesComponent","glasses","facialHairComponent","facialHair","bool","hairProbability","undefined","earringsProbability","glassesProbability","facialHairProbability"],"sources":["/app/node_modules/@dicebear/micah/lib/utils/getComponents.js"],"sourcesContent":["/**\n * Do not change this file manually! This file was generated with the \"Dicebear Exporter\"-Plugin for Figma.\n *\n * Plugin: https://www.figma.com/community/plugin/1005765655729342787\n * File: https://www.figma.com/file/YHb4ShTgmO8Lqhkz1plLfL\n */\nimport { pickComponent } from './pickComponent.js';\nexport function getComponents({ prng, options }) {\n    const baseComponent = pickComponent({\n        prng,\n        group: 'base',\n        values: options.base,\n    });\n    const mouthComponent = pickComponent({\n        prng,\n        group: 'mouth',\n        values: options.mouth,\n    });\n    const eyebrowsComponent = pickComponent({\n        prng,\n        group: 'eyebrows',\n        values: options.eyebrows,\n    });\n    const hairComponent = pickComponent({\n        prng,\n        group: 'hair',\n        values: options.hair,\n    });\n    const eyesComponent = pickComponent({\n        prng,\n        group: 'eyes',\n        values: options.eyes,\n    });\n    const noseComponent = pickComponent({\n        prng,\n        group: 'nose',\n        values: options.nose,\n    });\n    const earsComponent = pickComponent({\n        prng,\n        group: 'ears',\n        values: options.ears,\n    });\n    const shirtComponent = pickComponent({\n        prng,\n        group: 'shirt',\n        values: options.shirt,\n    });\n    const earringsComponent = pickComponent({\n        prng,\n        group: 'earrings',\n        values: options.earrings,\n    });\n    const glassesComponent = pickComponent({\n        prng,\n        group: 'glasses',\n        values: options.glasses,\n    });\n    const facialHairComponent = pickComponent({\n        prng,\n        group: 'facialHair',\n        values: options.facialHair,\n    });\n    return {\n        'base': baseComponent,\n        'mouth': mouthComponent,\n        'eyebrows': eyebrowsComponent,\n        'hair': prng.bool(options.hairProbability) ? hairComponent : undefined,\n        'eyes': eyesComponent,\n        'nose': noseComponent,\n        'ears': earsComponent,\n        'shirt': shirtComponent,\n        'earrings': prng.bool(options.earringsProbability) ? earringsComponent : undefined,\n        'glasses': prng.bool(options.glassesProbability) ? glassesComponent : undefined,\n        'facialHair': prng.bool(options.facialHairProbability) ? facialHairComponent : undefined,\n    };\n}\n;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,OAAO,SAASC,aAAaA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAAF,IAAA;EAC3C,MAAMG,aAAa,GAAGL,aAAa,CAAC;IAChCG,IAAI;IACJG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAEH,OAAO,CAACI;EACpB,CAAC,CAAC;EACF,MAAMC,cAAc,GAAGT,aAAa,CAAC;IACjCG,IAAI;IACJG,KAAK,EAAE,OAAO;IACdC,MAAM,EAAEH,OAAO,CAACM;EACpB,CAAC,CAAC;EACF,MAAMC,iBAAiB,GAAGX,aAAa,CAAC;IACpCG,IAAI;IACJG,KAAK,EAAE,UAAU;IACjBC,MAAM,EAAEH,OAAO,CAACQ;EACpB,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGb,aAAa,CAAC;IAChCG,IAAI;IACJG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAEH,OAAO,CAACU;EACpB,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGf,aAAa,CAAC;IAChCG,IAAI;IACJG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAEH,OAAO,CAACY;EACpB,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGjB,aAAa,CAAC;IAChCG,IAAI;IACJG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAEH,OAAO,CAACc;EACpB,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGnB,aAAa,CAAC;IAChCG,IAAI;IACJG,KAAK,EAAE,MAAM;IACbC,MAAM,EAAEH,OAAO,CAACgB;EACpB,CAAC,CAAC;EACF,MAAMC,cAAc,GAAGrB,aAAa,CAAC;IACjCG,IAAI;IACJG,KAAK,EAAE,OAAO;IACdC,MAAM,EAAEH,OAAO,CAACkB;EACpB,CAAC,CAAC;EACF,MAAMC,iBAAiB,GAAGvB,aAAa,CAAC;IACpCG,IAAI;IACJG,KAAK,EAAE,UAAU;IACjBC,MAAM,EAAEH,OAAO,CAACoB;EACpB,CAAC,CAAC;EACF,MAAMC,gBAAgB,GAAGzB,aAAa,CAAC;IACnCG,IAAI;IACJG,KAAK,EAAE,SAAS;IAChBC,MAAM,EAAEH,OAAO,CAACsB;EACpB,CAAC,CAAC;EACF,MAAMC,mBAAmB,GAAG3B,aAAa,CAAC;IACtCG,IAAI;IACJG,KAAK,EAAE,YAAY;IACnBC,MAAM,EAAEH,OAAO,CAACwB;EACpB,CAAC,CAAC;EACF,OAAO;IACH,MAAM,EAAEvB,aAAa;IACrB,OAAO,EAAEI,cAAc;IACvB,UAAU,EAAEE,iBAAiB;IAC7B,MAAM,EAAER,IAAI,CAAC0B,IAAI,CAACzB,OAAO,CAAC0B,eAAe,CAAC,GAAGjB,aAAa,GAAGkB,SAAS;IACtE,MAAM,EAAEhB,aAAa;IACrB,MAAM,EAAEE,aAAa;IACrB,MAAM,EAAEE,aAAa;IACrB,OAAO,EAAEE,cAAc;IACvB,UAAU,EAAElB,IAAI,CAAC0B,IAAI,CAACzB,OAAO,CAAC4B,mBAAmB,CAAC,GAAGT,iBAAiB,GAAGQ,SAAS;IAClF,SAAS,EAAE5B,IAAI,CAAC0B,IAAI,CAACzB,OAAO,CAAC6B,kBAAkB,CAAC,GAAGR,gBAAgB,GAAGM,SAAS;IAC/E,YAAY,EAAE5B,IAAI,CAAC0B,IAAI,CAACzB,OAAO,CAAC8B,qBAAqB,CAAC,GAAGP,mBAAmB,GAAGI;EACnF,CAAC;AACL;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}