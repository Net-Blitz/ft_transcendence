{"ast":null,"code":"var _jsxFileName = \"/app/src/Messagerie/Channel/Aside/Aside.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useCallback, useContext, useEffect } from 'react';\nimport './Aside.css';\nimport axios from 'axios';\n/* Interface */\n\nimport { MessagesContext } from '../ChannelsUtils';\n/* Components */\nimport { PopUp } from '../../../Profile/Components/MainInfo/MainInfo';\nimport { ChannelPassword } from '../ChannelPassword';\nimport { NewChannel, UpdateChannel } from '../NewChannel/NewChannel';\nimport { BasicFrame } from '../../../Profile/Components/MiddleInfo/MiddleInfo';\n/* Ressources */\nimport controller from '../../Ressources/controller.svg';\nimport settings from '../../Ressources/settings.svg';\nimport add from '../../Ressources/add.svg';\nimport profile from '../../Ressources/profile.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ChannelButton = _ref => {\n  let {\n    icon,\n    onClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"channel-button\",\n      src: icon,\n      alt: \"icon\",\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_c = ChannelButton;\nconst ChannelListElement = _ref2 => {\n  _s();\n  let {\n    Channel,\n    userInfo,\n    socket,\n    selectedChannel,\n    setSelectedChannel\n  } = _ref2;\n  const [ban, setBan] = useState([]);\n  const [ChannelPasswordTrigger, setChannelPasswordTrigger] = useState(false);\n  const [ChannelSettingsTrigger, setChannelSettingsTrigger] = useState(false);\n  const {\n    setMessages,\n    SaveChannel\n  } = useContext(MessagesContext);\n  const handleSelectChannel = async channel => {\n    const response = await axios.get('http://localhost:3333/chat/ban/' + (userInfo === null || userInfo === void 0 ? void 0 : userInfo.username), {\n      withCredentials: true\n    });\n    setBan(response.data);\n    if (ban !== null && ban !== void 0 && ban.find(ban => ban.name === channel.name)) {\n      console.log('You are banned from this channel');\n      return;\n    }\n    if ((channel === null || channel === void 0 ? void 0 : channel.state) === 'PUBLIC') {\n      setSelectedChannel(channel);\n      setMessages([]);\n      socket === null || socket === void 0 ? void 0 : socket.emit('join', {\n        channel: channel.name,\n        username: userInfo === null || userInfo === void 0 ? void 0 : userInfo.username\n      });\n    } else if ((channel === null || channel === void 0 ? void 0 : channel.state) === 'PROTECTED') {\n      if (SaveChannel.find(savechannel => savechannel.name === channel.name)) {\n        setSelectedChannel(channel);\n        setMessages([]);\n        socket === null || socket === void 0 ? void 0 : socket.emit('join', {\n          channel: channel.name,\n          username: userInfo === null || userInfo === void 0 ? void 0 : userInfo.username\n        });\n      } else {\n        handleChannelPasswordTrigger();\n      }\n    } else if ((channel === null || channel === void 0 ? void 0 : channel.state) === 'PRIVATE') {\n      if (channel.ownerId === (userInfo === null || userInfo === void 0 ? void 0 : userInfo.id)) {\n        setSelectedChannel(channel);\n        socket === null || socket === void 0 ? void 0 : socket.emit('join', {\n          channel: channel.name,\n          username: userInfo === null || userInfo === void 0 ? void 0 : userInfo.username\n        });\n      } else if (SaveChannel.find(savechannel => savechannel.name === channel.name)) {\n        setSelectedChannel(channel);\n        socket === null || socket === void 0 ? void 0 : socket.emit('join', {\n          channel: channel.name,\n          username: userInfo === null || userInfo === void 0 ? void 0 : userInfo.username\n        });\n      } else {\n        console.log(\"You don't have access to this channel\");\n      }\n    }\n  };\n  const handleChannelPasswordTrigger = useCallback(() => {\n    setChannelPasswordTrigger(!ChannelPasswordTrigger);\n  }, [ChannelPasswordTrigger, setChannelPasswordTrigger]);\n  const handleChannelSettingsTrigger = useCallback(() => {\n    setChannelSettingsTrigger(!ChannelSettingsTrigger);\n  }, [ChannelSettingsTrigger, setChannelSettingsTrigger]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dm-list-element ${Channel.id === (selectedChannel === null || selectedChannel === void 0 ? void 0 : selectedChannel.id) && 'active'}`,\n      onClick: () => handleSelectChannel(Channel),\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: Channel.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ChannelButton, {\n        icon: settings,\n        onClick: handleChannelSettingsTrigger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n        trigger: ChannelSettingsTrigger,\n        children: /*#__PURE__*/_jsxDEV(UpdateChannel, {\n          handleNewDmTrigger: handleChannelSettingsTrigger\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n      trigger: ChannelPasswordTrigger,\n      children: /*#__PURE__*/_jsxDEV(ChannelPassword, {\n        handleChannelPasswordTrigger: handleChannelPasswordTrigger,\n        Channel: Channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(ChannelListElement, \"9bNOgXTY7f8x253oUgFlGy5nV3U=\");\n_c2 = ChannelListElement;\nconst ChannelLists = _ref3 => {\n  let {\n    ChannelList,\n    userInfo,\n    socket,\n    selectedChannel,\n    setSelectedChannel\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dm-list\",\n    children: ChannelList.map((Channel, index) => {\n      return /*#__PURE__*/_jsxDEV(ChannelListElement, {\n        Channel: Channel,\n        userInfo: userInfo,\n        socket: socket,\n        selectedChannel: selectedChannel,\n        setSelectedChannel: setSelectedChannel\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 6\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 3\n  }, this);\n};\n_c3 = ChannelLists;\nconst UserChannelElement = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-channel-list-element\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"xxxx\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-channel-list-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(ChannelButton, {\n        icon: controller\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ChannelButton, {\n        icon: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ChannelButton, {\n        icon: profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ChannelButton, {\n        icon: settings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 3\n  }, this);\n};\n_c4 = UserChannelElement;\nconst UserChannelList = () => {\n  return /*#__PURE__*/_jsxDEV(BasicFrame, {\n    title: \"In this channel\",\n    children: /*#__PURE__*/_jsxDEV(UserChannelElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 3\n  }, this);\n};\n_c5 = UserChannelList;\nexport const Aside = _ref4 => {\n  _s2();\n  let {\n    buttonContent,\n    ChannelList,\n    userInfo,\n    socket,\n    selectedChannel,\n    setSelectedChannel\n  } = _ref4;\n  const [newDmTrigger, setNewDmTrigger] = useState(false);\n  const handleNewDmTrigger = useCallback(() => {\n    setNewDmTrigger(!newDmTrigger);\n  }, [newDmTrigger, setNewDmTrigger]);\n  useEffect(() => {\n    console.log(selectedChannel);\n  }, [selectedChannel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aside-channel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dm-aside\",\n      style: {\n        width: '100%',\n        height: '48%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-input\",\n        onClick: handleNewDmTrigger,\n        children: buttonContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ChannelLists, {\n        ChannelList: ChannelList,\n        socket: socket,\n        userInfo: userInfo,\n        selectedChannel: selectedChannel,\n        setSelectedChannel: setSelectedChannel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n        trigger: newDmTrigger,\n        children: /*#__PURE__*/_jsxDEV(NewChannel, {\n          handleNewDmTrigger: handleNewDmTrigger,\n          userInfo: userInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(UserChannelList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 3\n  }, this);\n};\n_s2(Aside, \"K40Xkvyz80Afn/NWz8Uavc1Y9oA=\");\n_c6 = Aside;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ChannelButton\");\n$RefreshReg$(_c2, \"ChannelListElement\");\n$RefreshReg$(_c3, \"ChannelLists\");\n$RefreshReg$(_c4, \"UserChannelElement\");\n$RefreshReg$(_c5, \"UserChannelList\");\n$RefreshReg$(_c6, \"Aside\");","map":{"version":3,"names":["React","useState","useCallback","useContext","useEffect","axios","MessagesContext","PopUp","ChannelPassword","NewChannel","UpdateChannel","BasicFrame","controller","settings","add","profile","jsxDEV","_jsxDEV","Fragment","_Fragment","ChannelButton","_ref","icon","onClick","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","ChannelListElement","_ref2","_s","Channel","userInfo","socket","selectedChannel","setSelectedChannel","ban","setBan","ChannelPasswordTrigger","setChannelPasswordTrigger","ChannelSettingsTrigger","setChannelSettingsTrigger","setMessages","SaveChannel","handleSelectChannel","channel","response","get","username","withCredentials","data","find","name","console","log","state","emit","savechannel","handleChannelPasswordTrigger","ownerId","id","handleChannelSettingsTrigger","trigger","handleNewDmTrigger","_c2","ChannelLists","_ref3","ChannelList","map","index","_c3","UserChannelElement","_c4","UserChannelList","title","_c5","Aside","_ref4","_s2","buttonContent","newDmTrigger","setNewDmTrigger","style","width","height","_c6","$RefreshReg$"],"sources":["/app/src/Messagerie/Channel/Aside/Aside.tsx"],"sourcesContent":["import React, { useState, useCallback, useContext, useEffect } from 'react';\nimport './Aside.css';\nimport { Socket } from 'socket.io-client';\nimport axios from 'axios';\n/* Interface */\nimport { ChannelDto } from '../ChannelsUtils';\nimport { userInfoDto } from '../ChannelsUtils';\nimport { MessagesContext } from '../ChannelsUtils';\n/* Components */\nimport { PopUp } from '../../../Profile/Components/MainInfo/MainInfo';\nimport { ChannelPassword } from '../ChannelPassword';\nimport { NewChannel, UpdateChannel } from '../NewChannel/NewChannel';\nimport { BasicFrame } from '../../../Profile/Components/MiddleInfo/MiddleInfo';\n/* Ressources */\nimport controller from '../../Ressources/controller.svg';\nimport settings from '../../Ressources/settings.svg';\nimport add from '../../Ressources/add.svg';\nimport profile from '../../Ressources/profile.svg';\n\nexport const ChannelButton = ({\n\ticon,\n\tonClick,\n}: {\n\ticon: string;\n\tonClick?: any;\n}) => {\n\treturn (\n\t\t<>\n\t\t\t<img\n\t\t\t\tclassName=\"channel-button\"\n\t\t\t\tsrc={icon}\n\t\t\t\talt=\"icon\"\n\t\t\t\tonClick={onClick}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nconst ChannelListElement = ({\n\tChannel,\n\tuserInfo,\n\tsocket,\n\tselectedChannel,\n\tsetSelectedChannel,\n}: {\n\tChannel: ChannelDto;\n\tuserInfo: userInfoDto | undefined;\n\tsocket: Socket;\n\tselectedChannel: ChannelDto | undefined;\n\tsetSelectedChannel: React.Dispatch<\n\t\tReact.SetStateAction<ChannelDto | undefined>\n\t>;\n}) => {\n\tconst [ban, setBan] = useState<any[]>([]);\n\tconst [ChannelPasswordTrigger, setChannelPasswordTrigger] = useState(false);\n\tconst [ChannelSettingsTrigger, setChannelSettingsTrigger] = useState(false);\n\tconst { setMessages, SaveChannel } = useContext(MessagesContext);\n\n\tconst handleSelectChannel = async (channel: ChannelDto) => {\n\t\tconst response = await axios.get(\n\t\t\t'http://localhost:3333/chat/ban/' + userInfo?.username,\n\t\t\t{ withCredentials: true }\n\t\t);\n\t\tsetBan(response.data);\n\t\tif (ban?.find((ban: any) => ban.name === channel.name)) {\n\t\t\tconsole.log('You are banned from this channel');\n\t\t\treturn;\n\t\t}\n\t\tif (channel?.state === 'PUBLIC') {\n\t\t\tsetSelectedChannel(channel);\n\t\t\tsetMessages([]);\n\t\t\tsocket?.emit('join', {\n\t\t\t\tchannel: channel.name,\n\t\t\t\tusername: userInfo?.username,\n\t\t\t});\n\t\t} else if (channel?.state === 'PROTECTED') {\n\t\t\tif (\n\t\t\t\tSaveChannel.find(\n\t\t\t\t\t(savechannel) => savechannel.name === channel.name\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tsetSelectedChannel(channel);\n\t\t\t\tsetMessages([]);\n\t\t\t\tsocket?.emit('join', {\n\t\t\t\t\tchannel: channel.name,\n\t\t\t\t\tusername: userInfo?.username,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\thandleChannelPasswordTrigger();\n\t\t\t}\n\t\t} else if (channel?.state === 'PRIVATE') {\n\t\t\tif (channel.ownerId === userInfo?.id) {\n\t\t\t\tsetSelectedChannel(channel);\n\t\t\t\tsocket?.emit('join', {\n\t\t\t\t\tchannel: channel.name,\n\t\t\t\t\tusername: userInfo?.username,\n\t\t\t\t});\n\t\t\t} else if (\n\t\t\t\tSaveChannel.find(\n\t\t\t\t\t(savechannel) => savechannel.name === channel.name\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tsetSelectedChannel(channel);\n\t\t\t\tsocket?.emit('join', {\n\t\t\t\t\tchannel: channel.name,\n\t\t\t\t\tusername: userInfo?.username,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log(\"You don't have access to this channel\");\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleChannelPasswordTrigger = useCallback(() => {\n\t\tsetChannelPasswordTrigger(!ChannelPasswordTrigger);\n\t}, [ChannelPasswordTrigger, setChannelPasswordTrigger]);\n\n\tconst handleChannelSettingsTrigger = useCallback(() => {\n\t\tsetChannelSettingsTrigger(!ChannelSettingsTrigger);\n\t}, [ChannelSettingsTrigger, setChannelSettingsTrigger]);\n\n\treturn (\n\t\t<>\n\t\t\t<div\n\t\t\t\tclassName={`dm-list-element ${\n\t\t\t\t\tChannel.id === selectedChannel?.id && 'active'\n\t\t\t\t}`}\n\t\t\t\tonClick={() => handleSelectChannel(Channel)}>\n\t\t\t\t<h4>{Channel.name}</h4>\n\t\t\t\t<ChannelButton\n\t\t\t\t\ticon={settings}\n\t\t\t\t\tonClick={handleChannelSettingsTrigger}\n\t\t\t\t/>\n\t\t\t\t<PopUp trigger={ChannelSettingsTrigger}>\n\t\t\t\t\t<UpdateChannel\n\t\t\t\t\t\thandleNewDmTrigger={handleChannelSettingsTrigger}\n\t\t\t\t\t/>\n\t\t\t\t</PopUp>\n\t\t\t</div>\n\t\t\t<PopUp trigger={ChannelPasswordTrigger}>\n\t\t\t\t<ChannelPassword\n\t\t\t\t\thandleChannelPasswordTrigger={handleChannelPasswordTrigger}\n\t\t\t\t\tChannel={Channel}\n\t\t\t\t/>\n\t\t\t</PopUp>\n\t\t</>\n\t);\n};\n\nconst ChannelLists = ({\n\tChannelList,\n\tuserInfo,\n\tsocket,\n\tselectedChannel,\n\tsetSelectedChannel,\n}: {\n\tChannelList: ChannelDto[];\n\tuserInfo: userInfoDto | undefined;\n\tsocket: Socket;\n\tselectedChannel: ChannelDto | undefined;\n\tsetSelectedChannel: React.Dispatch<\n\t\tReact.SetStateAction<ChannelDto | undefined>\n\t>;\n}) => {\n\treturn (\n\t\t<div className=\"dm-list\">\n\t\t\t{ChannelList.map((Channel, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ChannelListElement\n\t\t\t\t\t\tChannel={Channel}\n\t\t\t\t\t\tuserInfo={userInfo}\n\t\t\t\t\t\tsocket={socket}\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\tselectedChannel={selectedChannel}\n\t\t\t\t\t\tsetSelectedChannel={setSelectedChannel}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nconst UserChannelElement = () => {\n\treturn (\n\t\t<div className=\"user-channel-list-element\">\n\t\t\t{/* <img className=\"dm-list-element-avatar\" src={friend} alt=\"\" /> */}\n\t\t\t<h4>xxxx</h4>\n\t\t\t<div className=\"user-channel-list-buttons\">\n\t\t\t\t<ChannelButton icon={controller} />\n\t\t\t\t<ChannelButton icon={add} />\n\t\t\t\t<ChannelButton icon={profile} />\n\t\t\t\t<ChannelButton icon={settings} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst UserChannelList = () => {\n\treturn (\n\t\t<BasicFrame title=\"In this channel\">\n\t\t\t<UserChannelElement />\n\t\t</BasicFrame>\n\t);\n};\n\nexport const Aside = ({\n\tbuttonContent,\n\tChannelList,\n\tuserInfo,\n\tsocket,\n\tselectedChannel,\n\tsetSelectedChannel,\n}: {\n\tbuttonContent: string;\n\tChannelList: ChannelDto[];\n\tuserInfo: userInfoDto | undefined;\n\tsocket: Socket;\n\tselectedChannel: ChannelDto | undefined;\n\tsetSelectedChannel: React.Dispatch<\n\t\tReact.SetStateAction<ChannelDto | undefined>\n\t>;\n}) => {\n\tconst [newDmTrigger, setNewDmTrigger] = useState(false);\n\n\tconst handleNewDmTrigger = useCallback(() => {\n\t\tsetNewDmTrigger(!newDmTrigger);\n\t}, [newDmTrigger, setNewDmTrigger]);\n\n\tuseEffect(() => {\n\t\tconsole.log(selectedChannel);\n\t}, [selectedChannel]);\n\n\treturn (\n\t\t<div className=\"aside-channel\">\n\t\t\t<div className=\"dm-aside\" style={{ width: '100%', height: '48%' }}>\n\t\t\t\t<button className=\"new-input\" onClick={handleNewDmTrigger}>\n\t\t\t\t\t{buttonContent}\n\t\t\t\t</button>\n\t\t\t\t<ChannelLists\n\t\t\t\t\tChannelList={ChannelList}\n\t\t\t\t\tsocket={socket}\n\t\t\t\t\tuserInfo={userInfo}\n\t\t\t\t\tselectedChannel={selectedChannel}\n\t\t\t\t\tsetSelectedChannel={setSelectedChannel}\n\t\t\t\t/>\n\t\t\t\t<PopUp trigger={newDmTrigger}>\n\t\t\t\t\t<NewChannel\n\t\t\t\t\t\thandleNewDmTrigger={handleNewDmTrigger}\n\t\t\t\t\t\tuserInfo={userInfo}\n\t\t\t\t\t/>\n\t\t\t\t</PopUp>\n\t\t\t</div>\n\t\t\t<UserChannelList />\n\t\t</div>\n\t);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}