{"ast":null,"code":"var _jsxFileName = \"/app/src/Login/Components/Auth/Carousel/Carousel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Carousel.css';\n/*\tFunctions\t*/\nimport { generateAvatars } from './genAvatars';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Carousel = _ref => {\n  _s();\n  let {\n    currentIndex,\n    setCurrentIndex,\n    avatar,\n    setAvatar,\n    refresh\n  } = _ref;\n  /*\tHOOK settings\t*/\n  const [length, setLenght] = useState(avatar.length);\n  useEffect(() => {\n    setLenght(avatar.length);\n  }, [avatar]);\n  const prev = () => {\n    if (currentIndex !== 0) setCurrentIndex(currentIndex - 1);\n  };\n  const next = () => {\n    if (currentIndex + 1 < length) setCurrentIndex(currentIndex + 1);\n  };\n  const renderAvatar = (index, setting) => {\n    if (index < 0 || index >= length) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `avatar ${setting} empty`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `avatar ${setting}`,\n        style: {\n          backgroundImage: `url('${avatar[index].url}')`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover'\n        },\n        onClick: setting === 'left' ? prev : setting === 'right' ? next : undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this);\n    }\n  };\n  const handleChange = event => {\n    const file = event.target.files[0];\n    console.log(file.name, file.type, file.size);\n    if (file) {\n      const allowedTypes = ['image/png', 'image/jpeg', 'image/jpg'];\n      const allowedSize = 2 * 1024 * 1024;\n      if (allowedTypes.includes(file.type) && file.size <= allowedSize) {\n        const img = new Image();\n        img.src = URL.createObjectURL(file);\n        img.onload = () => {\n          console.log(img);\n          if (img.width > 400 || img.height > 400) alert('Image too big (max 400x400)');else {\n            let newAvatar = [...avatar];\n            newAvatar.splice(currentIndex, 0, {\n              file: file,\n              url: img.src,\n              source: 'imported',\n              type: file.type\n            });\n            setAvatar(newAvatar);\n          }\n        };\n      } else alert('File not supported (png, jpg, jpeg) or too big (> 2Mo)');\n    }\n  };\n  const handleRefresh = () => {\n    let newAvatar = generateAvatars(12);\n    for (let i = 0; i < avatar.length; i++) {\n      if (avatar[i].source === 'imported') newAvatar.splice(i, 0, avatar[i]);\n    }\n    setAvatar(newAvatar);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-element\",\n      children: [renderAvatar(currentIndex - 1, 'left'), renderAvatar(currentIndex, ''), renderAvatar(currentIndex + 1, 'right')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-refresh\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"inputTag\",\n        children: [\"Download your avatar\", /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"inputTag\",\n          type: \"file\",\n          accept: \".png, .jpg, .jpeg\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: refresh,\n        alt: \"refresh logo\",\n        onClick: handleRefresh\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 3\n  }, this);\n};\n_s(Carousel, \"4vYlMzNqr7x5IaSnIjV3JC5LHME=\");\n_c = Carousel;\nexport default Carousel;\nvar _c;\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"names":["React","useEffect","useState","generateAvatars","jsxDEV","_jsxDEV","Carousel","_ref","_s","currentIndex","setCurrentIndex","avatar","setAvatar","refresh","length","setLenght","prev","next","renderAvatar","index","setting","className","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundImage","url","backgroundPosition","backgroundSize","onClick","undefined","handleChange","event","file","target","files","console","log","name","type","size","allowedTypes","allowedSize","includes","img","Image","src","URL","createObjectURL","onload","width","height","alert","newAvatar","splice","source","handleRefresh","i","children","htmlFor","id","accept","onChange","alt","_c","$RefreshReg$"],"sources":["/app/src/Login/Components/Auth/Carousel/Carousel.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Carousel.css';\n/*\tFunctions\t*/\nimport { generateAvatars } from './genAvatars';\n\ninterface CarouselProps {\n\tcurrentIndex: number;\n\tsetCurrentIndex: React.Dispatch<React.SetStateAction<number>>;\n\tavatar: any;\n\tsetAvatar: React.Dispatch<React.SetStateAction<any>>;\n\trefresh: string;\n}\n\nconst Carousel = ({\n\tcurrentIndex,\n\tsetCurrentIndex,\n\tavatar,\n\tsetAvatar,\n\trefresh,\n}: CarouselProps) => {\n\t/*\tHOOK settings\t*/\n\tconst [length, setLenght] = useState(avatar.length);\n\n\tuseEffect(() => {\n\t\tsetLenght(avatar.length);\n\t}, [avatar]);\n\n\tconst prev = () => {\n\t\tif (currentIndex !== 0) setCurrentIndex(currentIndex - 1);\n\t};\n\n\tconst next = () => {\n\t\tif (currentIndex + 1 < length) setCurrentIndex(currentIndex + 1);\n\t};\n\n\tconst renderAvatar = (index: number, setting: string) => {\n\t\tif (index < 0 || index >= length) {\n\t\t\treturn <div className={`avatar ${setting} empty`}></div>;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tclassName={`avatar ${setting}`}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundImage: `url('${avatar[index].url}')`,\n\t\t\t\t\t\tbackgroundPosition: 'center',\n\t\t\t\t\t\tbackgroundSize: 'cover',\n\t\t\t\t\t}}\n\t\t\t\t\tonClick={\n\t\t\t\t\t\tsetting === 'left'\n\t\t\t\t\t\t\t? prev\n\t\t\t\t\t\t\t: setting === 'right'\n\t\t\t\t\t\t\t? next\n\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t}></div>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst handleChange = (event: any) => {\n\t\tconst file = event.target.files[0];\n\t\tconsole.log(file.name, file.type, file.size);\n\t\tif (file) {\n\t\t\tconst allowedTypes = ['image/png', 'image/jpeg', 'image/jpg'];\n\t\t\tconst allowedSize = 2 * 1024 * 1024;\n\t\t\tif (allowedTypes.includes(file.type) && file.size <= allowedSize) {\n\t\t\t\tconst img = new Image();\n\t\t\t\timg.src = URL.createObjectURL(file);\n\t\t\t\timg.onload = () => {\n\t\t\t\t\tconsole.log(img);\n\t\t\t\t\tif (img.width > 400 || img.height > 400)\n\t\t\t\t\t\talert('Image too big (max 400x400)');\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet newAvatar = [...avatar];\n\t\t\t\t\t\tnewAvatar.splice(currentIndex, 0, {\n\t\t\t\t\t\t\tfile: file,\n\t\t\t\t\t\t\turl: img.src,\n\t\t\t\t\t\t\tsource: 'imported',\n\t\t\t\t\t\t\ttype: file.type,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetAvatar(newAvatar);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t} else\n\t\t\t\talert('File not supported (png, jpg, jpeg) or too big (> 2Mo)');\n\t\t}\n\t};\n\n\tconst handleRefresh = () => {\n\t\tlet newAvatar = generateAvatars(12);\n\t\tfor (let i = 0; i < avatar.length; i++) {\n\t\t\tif (avatar[i].source === 'imported')\n\t\t\t\tnewAvatar.splice(i, 0, avatar[i]);\n\t\t}\n\t\tsetAvatar(newAvatar);\n\t};\n\n\treturn (\n\t\t<div className=\"carousel-wrapper\">\n\t\t\t<div className=\"carousel-element\">\n\t\t\t\t{renderAvatar(currentIndex - 1, 'left')}\n\t\t\t\t{renderAvatar(currentIndex, '')}\n\t\t\t\t{renderAvatar(currentIndex + 1, 'right')}\n\t\t\t</div>\n\t\t\t<div className=\"carousel-refresh\">\n\t\t\t\t<label htmlFor=\"inputTag\">\n\t\t\t\t\tDownload your avatar\n\t\t\t\t\t<input\n\t\t\t\t\t\tid=\"inputTag\"\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\taccept=\".png, .jpg, .jpeg\"\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<img src={refresh} alt=\"refresh logo\" onClick={handleRefresh} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Carousel;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}