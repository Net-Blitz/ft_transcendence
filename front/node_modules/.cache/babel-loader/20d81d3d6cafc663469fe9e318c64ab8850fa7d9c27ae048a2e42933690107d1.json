{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useStore } from 'react-redux';\nimport { fetchOrUpdateUser } from './redux/user';\n\n// Hook to query data from back\nexport function useAxios(url) {\n  _s();\n  const [data, setData] = useState({});\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    if (!url) return;\n    setLoading(true);\n    async function fetchData() {\n      try {\n        const response = await axios.get(url, {\n          withCredentials: true\n        });\n        setData(response.data);\n      } catch (err) {\n        console.log(err);\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchData();\n  }, [url]);\n  return {\n    isLoading,\n    data,\n    error\n  };\n}\n\n// Hook to update User on Redux\n_s(useAxios, \"I3PlMlwpe/K4XMhtkGOVndNNG2k=\");\nexport function useGetUser() {\n  _s2();\n  const store = useStore();\n  useEffect(() => {\n    fetchOrUpdateUser(store);\n  }, [store]);\n  return;\n}\n_s2(useGetUser, \"7WX0f3w9+vyXsBWAiuPF4CU1RJU=\", false, function () {\n  return [useStore];\n});","map":{"version":3,"names":["useState","useEffect","axios","useStore","fetchOrUpdateUser","useAxios","url","_s","data","setData","isLoading","setLoading","error","setError","fetchData","response","get","withCredentials","err","console","log","useGetUser","_s2","store"],"sources":["/app/src/utils/hooks.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useStore } from 'react-redux';\nimport { fetchOrUpdateUser } from './redux/user';\n\n// Hook to query data from back\nexport function useAxios(url: string) {\n\tconst [data, setData] = useState({});\n\tconst [isLoading, setLoading] = useState(true);\n\tconst [error, setError] = useState(false);\n\n\tuseEffect(() => {\n\t\tif (!url) return;\n\t\tsetLoading(true);\n\t\tasync function fetchData() {\n\t\t\ttry {\n\t\t\t\tconst response = await axios.get(url, {\n\t\t\t\t\twithCredentials: true,\n\t\t\t\t});\n\t\t\t\tsetData(response.data);\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t\tsetError(true);\n\t\t\t} finally {\n\t\t\t\tsetLoading(false);\n\t\t\t}\n\t\t}\n\t\tfetchData();\n\t}, [url]);\n\treturn { isLoading, data, error };\n}\n\n// Hook to update User on Redux\nexport function useGetUser() {\n\tconst store = useStore();\n\n\tuseEffect(() => {\n\t\tfetchOrUpdateUser(store);\n\t}, [store]);\n\n\treturn;\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,iBAAiB,QAAQ,cAAc;;AAEhD;AACA,OAAO,SAASC,QAAQA,CAACC,GAAW,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACU,SAAS,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACf,IAAI,CAACK,GAAG,EAAE;IACVK,UAAU,CAAC,IAAI,CAAC;IAChB,eAAeG,SAASA,CAAA,EAAG;MAC1B,IAAI;QACH,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAACV,GAAG,EAAE;UACrCW,eAAe,EAAE;QAClB,CAAC,CAAC;QACFR,OAAO,CAACM,QAAQ,CAACP,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOU,GAAG,EAAE;QACbC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QAChBL,QAAQ,CAAC,IAAI,CAAC;MACf,CAAC,SAAS;QACTF,UAAU,CAAC,KAAK,CAAC;MAClB;IACD;IACAG,SAAS,EAAE;EACZ,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC;EACT,OAAO;IAAEI,SAAS;IAAEF,IAAI;IAAEI;EAAM,CAAC;AAClC;;AAEA;AAAAL,EAAA,CA1BgBF,QAAQ;AA2BxB,OAAO,SAASgB,UAAUA,CAAA,EAAG;EAAAC,GAAA;EAC5B,MAAMC,KAAK,GAAGpB,QAAQ,EAAE;EAExBF,SAAS,CAAC,MAAM;IACfG,iBAAiB,CAACmB,KAAK,CAAC;EACzB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX;AACD;AAACD,GAAA,CAReD,UAAU;EAAA,QACXlB,QAAQ;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}