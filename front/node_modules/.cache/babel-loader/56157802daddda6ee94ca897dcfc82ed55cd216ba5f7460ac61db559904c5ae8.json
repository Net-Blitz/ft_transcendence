{"ast":null,"code":"var _jsxFileName = \"/app/src/Chat/Chat.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport JoinnedChannels from './Joinnedchannel';\nimport DirectMessage from './DirectMessage';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [channelOrDM, setChannelOrDM] = useState('channel');\n  const [channels, setChannels] = useState([]);\n  const [userInfo, setUserInfo] = useState();\n  const [DMList, setDMList] = useState([]);\n  const [socket, setSocket] = useState();\n  useEffect(() => {\n    const newSocket = io('http://localhost:3334');\n    setSocket(newSocket);\n    return () => {\n      newSocket.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await axios.get('http://localhost:3333/users/me', {\n        withCredentials: true\n      });\n      setUserInfo(response.data);\n    };\n    const fetchChats = async () => {\n      try {\n        const Channels = await axios.get('http://localhost:3333/chat/channels', {\n          withCredentials: true\n        });\n        setChannels(Channels.data);\n        const DMS = await axios.get('http://localhost:3333/chat/dm', {\n          withCredentials: true\n        });\n        setDMList(DMS.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n    fetchChats();\n    const interval = setInterval(fetchChats, 5000);\n    return () => clearInterval(interval);\n  }, [userInfo === null || userInfo === void 0 ? void 0 : userInfo.username]);\n  const handleOptionChange = event => {\n    setChannelOrDM(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: channelOrDM === 'channel' ? /*#__PURE__*/_jsxDEV(JoinnedChannels, {\n      ChannelsList: channels,\n      userInfo: userInfo,\n      channelOrDM: channelOrDM,\n      handleOptionChange: handleOptionChange,\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(DirectMessage, {\n      DMList: DMList,\n      userInfo: userInfo,\n      socket: socket,\n      channelOrDM: channelOrDM,\n      handleOptionChange: handleOptionChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n_s(Chat, \"J2jPWLSsAmyvsh5th+RlyjDvD3w=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","axios","JoinnedChannels","DirectMessage","io","jsxDEV","_jsxDEV","Chat","_s","channelOrDM","setChannelOrDM","channels","setChannels","userInfo","setUserInfo","DMList","setDMList","socket","setSocket","newSocket","disconnect","fetchData","response","get","withCredentials","data","fetchChats","Channels","DMS","error","console","interval","setInterval","clearInterval","username","handleOptionChange","event","target","value","children","ChannelsList","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/app/src/Chat/Chat.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport JoinnedChannels from './Joinnedchannel';\nimport DirectMessage, { DirectMessageDto } from './DirectMessage';\nimport { io } from 'socket.io-client';\n\nexport interface ChannelDto {\n\tid: number;\n\tname: string;\n\tstate: string;\n\townerId: number;\n\tChatUsers: any[];\n}\n\nconst Chat = () => {\n\tconst [channelOrDM, setChannelOrDM] = useState<'channel' | 'dm'>('channel');\n\tconst [channels, setChannels] = useState<ChannelDto[]>([]);\n\tconst [userInfo, setUserInfo] = useState<any>();\n\tconst [DMList, setDMList] = useState<DirectMessageDto[]>([]);\n\tconst [socket, setSocket] = useState<any>();\n\n\tuseEffect(() => {\n\t\tconst newSocket = io('http://localhost:3334');\n\t\tsetSocket(newSocket);\n\n\t\treturn () => {\n\t\t\tnewSocket.disconnect();\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tconst fetchData = async () => {\n\t\t\tconst response = await axios.get('http://localhost:3333/users/me', {\n\t\t\t\twithCredentials: true,\n\t\t\t});\n\t\t\tsetUserInfo(response.data);\n\t\t};\n\n\t\tconst fetchChats = async () => {\n\t\t\ttry {\n\t\t\t\tconst Channels = await axios.get<ChannelDto[]>(\n\t\t\t\t\t'http://localhost:3333/chat/channels',\n\t\t\t\t\t{ withCredentials: true }\n\t\t\t\t);\n\t\t\t\tsetChannels(Channels.data);\n\t\t\t\tconst DMS = await axios.get<DirectMessageDto[]>(\n\t\t\t\t\t'http://localhost:3333/chat/dm',\n\t\t\t\t\t{ withCredentials: true }\n\t\t\t\t);\n\t\t\t\tsetDMList(DMS.data);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(error);\n\t\t\t}\n\t\t};\n\n\t\tfetchData();\n\t\tfetchChats();\n\t\tconst interval = setInterval(fetchChats, 5000);\n\t\treturn () => clearInterval(interval);\n\t}, [userInfo?.username]);\n\n\tconst handleOptionChange = (\n\t\tevent: React.ChangeEvent<HTMLSelectElement>\n\t) => {\n\t\tsetChannelOrDM(event.target.value as 'channel' | 'dm');\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{channelOrDM === 'channel' ? (\n\t\t\t\t<JoinnedChannels\n\t\t\t\t\tChannelsList={channels}\n\t\t\t\t\tuserInfo={userInfo}\n\t\t\t\t\tchannelOrDM={channelOrDM}\n\t\t\t\t\thandleOptionChange={handleOptionChange}\n\t\t\t\t\tsocket={socket}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<DirectMessage\n\t\t\t\t\tDMList={DMList}\n\t\t\t\t\tuserInfo={userInfo}\n\t\t\t\t\tsocket={socket}\n\t\t\t\t\tchannelOrDM={channelOrDM}\n\t\t\t\t\thandleOptionChange={handleOptionChange}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}