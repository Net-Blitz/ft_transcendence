{"ast":null,"code":"export const inputProtectionPseudo = (input, usernames) => {\n  const regexLetters = /^[a-zA-Z0-9_]+$/;\n  if (!regexLetters.test(input)) return 'Bad characters';\n  const regexLenght = /^.{3,14}$/;\n  if (!regexLenght.test(input)) return 'Bad length';\n  for (let i = 0; i < usernames.length; i++) {\n    if (usernames[i].username === input) return 'Username already taken';\n  }\n  return '';\n};\nexport const inputProtectionQR = input => {\n  const regexQR = /^\\d*(?:\\s?\\d\\s?)*$/; // 0-9, space, max 3 spaces\n  if (!regexQR.test(input)) return 'Bad input';\n  return '';\n};","map":{"version":3,"names":["inputProtectionPseudo","input","usernames","regexLetters","test","regexLenght","i","length","username","inputProtectionQR","regexQR"],"sources":["/app/src/Login/Components/Auth/Input/inputProtection.ts"],"sourcesContent":["\nexport const inputProtectionPseudo = (input: string, usernames: any[]): string => {\n\tconst regexLetters = /^[a-zA-Z0-9_]+$/;\n\tif (!regexLetters.test(input))\n\t\treturn ('Bad characters');\n\tconst regexLenght = /^.{3,14}$/;\n\tif (!regexLenght.test(input))\n\t\treturn ('Bad length');\n\tfor (let i = 0; i < usernames.length; i++) {\n\t\tif (usernames[i].username === input)\n\t\t\treturn ('Username already taken');\n\t}\n\treturn ('');\n}\n\nexport const inputProtectionQR = (input: string) : string => {\n\tconst regexQR = /^\\d*(?:\\s?\\d\\s?)*$/; // 0-9, space, max 3 spaces\n\tif (!regexQR.test(input))\n\t\treturn ('Bad input');\n\treturn ('');\n}"],"mappings":"AACA,OAAO,MAAMA,qBAAqB,GAAGA,CAACC,KAAa,EAAEC,SAAgB,KAAa;EACjF,MAAMC,YAAY,GAAG,iBAAiB;EACtC,IAAI,CAACA,YAAY,CAACC,IAAI,CAACH,KAAK,CAAC,EAC5B,OAAQ,gBAAgB;EACzB,MAAMI,WAAW,GAAG,WAAW;EAC/B,IAAI,CAACA,WAAW,CAACD,IAAI,CAACH,KAAK,CAAC,EAC3B,OAAQ,YAAY;EACrB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,SAAS,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IAC1C,IAAIJ,SAAS,CAACI,CAAC,CAAC,CAACE,QAAQ,KAAKP,KAAK,EAClC,OAAQ,wBAAwB;EAClC;EACA,OAAQ,EAAE;AACX,CAAC;AAED,OAAO,MAAMQ,iBAAiB,GAAIR,KAAa,IAAc;EAC5D,MAAMS,OAAO,GAAG,oBAAoB,CAAC,CAAC;EACtC,IAAI,CAACA,OAAO,CAACN,IAAI,CAACH,KAAK,CAAC,EACvB,OAAQ,WAAW;EACpB,OAAQ,EAAE;AACX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}