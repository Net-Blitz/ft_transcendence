{"ast":null,"code":"var _jsxFileName = \"/app/src/Messagerie/Channel/Aside/Aside.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useState, useCallback, useContext, useEffect, useRef } from 'react';\nimport './Aside.css';\nimport axios from 'axios';\n/* Interface */\nimport { ChannelsContext } from '../ChannelsUtils';\n/* Components */\nimport { PopUp } from '../../../Profile/Components/MainInfo/MainInfo';\nimport { ChannelPassword } from '../ChannelPassword';\nimport { NewChannel, UpdateChannel } from '../NewChannel/NewChannel';\nimport { BasicFrame } from '../../../Profile/Components/MiddleInfo/MiddleInfo';\n/* Ressources */\nimport controller from '../../Ressources/controller.svg';\nimport settings from '../../Ressources/settings.svg';\nimport profile from '../../Ressources/profile.svg';\nimport { useSelector } from 'react-redux';\nimport { selectUserData } from '../../../utils/redux/selectors';\nimport Invite from '../Invite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ChannelButton = _ref => {\n  let {\n    icon,\n    onClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"channel-button\",\n      src: icon,\n      alt: \"icon\",\n      onClick: onClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_c = ChannelButton;\nconst ChannelListElement = _ref2 => {\n  _s();\n  let {\n    Channel,\n    socket\n  } = _ref2;\n  const [ban, setBan] = useState([]);\n  const [ChannelPasswordTrigger, setChannelPasswordTrigger] = useState(false);\n  const [ChannelSettingsTrigger, setChannelSettingsTrigger] = useState(false);\n  const {\n    setMessages,\n    SaveChannel,\n    selectedChannel,\n    setSelectedChannel\n  } = useContext(ChannelsContext);\n  const connectedUser = useSelector(selectUserData);\n  useEffect(() => {\n    const getBan = async () => {\n      try {\n        const response = await axios.get('http://localhost:3333/chat/ban/' + connectedUser.username, {\n          withCredentials: true\n        });\n        setBan(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getBan();\n  }, [connectedUser.username]);\n  const getMessages = async () => {\n    try {\n      const response = await axios.get('http://localhost:3333/chat/channel/messages/' + Channel.id, {\n        withCredentials: true\n      });\n      response.data.map(message => {\n        return message.userId === connectedUser.id ? message.username = connectedUser.username : message.username = '', message.content = message.message;\n      });\n      setMessages(response.data.reverse());\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleSelectChannel = async channel => {\n    const response = await axios.get('http://localhost:3333/chat/ban/' + connectedUser.username, {\n      withCredentials: true\n    });\n    setBan(response.data);\n    if (ban.find(ban => ban.name === channel.name)) {\n      console.log('You are banned from this channel');\n      return;\n    } else if ((channel === null || channel === void 0 ? void 0 : channel.state) === 'PUBLIC') {\n      setSelectedChannel(channel);\n      getMessages();\n      socket === null || socket === void 0 ? void 0 : socket.emit('join', {\n        channel: channel.name,\n        username: connectedUser.username\n      });\n    } else if ((channel === null || channel === void 0 ? void 0 : channel.state) === 'PROTECTED') {\n      if (SaveChannel.find(savechannel => savechannel.name === channel.name) || connectedUser.id === channel.ownerId) {\n        setSelectedChannel(channel);\n        getMessages();\n        socket === null || socket === void 0 ? void 0 : socket.emit('join', {\n          channel: channel.name,\n          username: connectedUser.username\n        });\n      } else {\n        handleChannelPasswordTrigger();\n      }\n    } else if ((channel === null || channel === void 0 ? void 0 : channel.state) === 'PRIVATE') {\n      if (channel.ownerId === connectedUser.id) {\n        setSelectedChannel(channel);\n        socket === null || socket === void 0 ? void 0 : socket.emit('join', {\n          channel: channel.name,\n          username: connectedUser.username\n        });\n      } else if (SaveChannel.find(savechannel => savechannel.name === channel.name)) {\n        setSelectedChannel(channel);\n        socket === null || socket === void 0 ? void 0 : socket.emit('join', {\n          channel: channel.name,\n          username: connectedUser.username\n        });\n      } else {\n        console.log(\"You don't have access to this channel\");\n      }\n    }\n  };\n  const handleChannelPasswordTrigger = useCallback(() => {\n    setChannelPasswordTrigger(!ChannelPasswordTrigger);\n  }, [ChannelPasswordTrigger, setChannelPasswordTrigger]);\n  const handleChannelSettingsTrigger = useCallback(() => {\n    setChannelSettingsTrigger(!ChannelSettingsTrigger);\n  }, [ChannelSettingsTrigger, setChannelSettingsTrigger]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dm-list-element ${Channel.id === (selectedChannel === null || selectedChannel === void 0 ? void 0 : selectedChannel.id) && 'active'}`,\n      onClick: () => handleSelectChannel(Channel),\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: Channel.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 5\n      }, this), connectedUser.id === Channel.ownerId && /*#__PURE__*/_jsxDEV(ChannelButton, {\n        icon: settings,\n        onClick: handleChannelSettingsTrigger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n      trigger: ChannelSettingsTrigger,\n      children: /*#__PURE__*/_jsxDEV(UpdateChannel, {\n        handleNewDmTrigger: handleChannelSettingsTrigger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n      trigger: ChannelPasswordTrigger,\n      children: /*#__PURE__*/_jsxDEV(ChannelPassword, {\n        handleChannelPasswordTrigger: handleChannelPasswordTrigger,\n        Channel: Channel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(ChannelListElement, \"yxJSsWWBezIZbxycibZ0b0RR46o=\", false, function () {\n  return [useSelector];\n});\n_c2 = ChannelListElement;\nconst ChannelLists = _ref3 => {\n  _s2();\n  let {\n    socket\n  } = _ref3;\n  const {\n    ChannelList\n  } = useContext(ChannelsContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dm-list\",\n    children: ChannelList.map((Channel, index) => {\n      return /*#__PURE__*/_jsxDEV(ChannelListElement, {\n        Channel: Channel,\n        socket: socket\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 6\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 3\n  }, this);\n};\n_s2(ChannelLists, \"kOr3vMsawseZWAOK+kuYC+tV9Lk=\");\n_c3 = ChannelLists;\nconst UserChannelElement = _ref4 => {\n  _s3();\n  let {\n    user,\n    channel,\n    isAdmin,\n    socket\n  } = _ref4;\n  const userConnected = useSelector(selectUserData);\n  const userIsAdmin = channel.ownerId === user.id || user.role === 'admin';\n  const [userSettingsTrigger, setUserSettingsTrigger] = useState(false);\n  const dropdown = useRef(null);\n  const [mute, setMute] = useState([]);\n  let isMute = false;\n  const handleUserSettingsTrigger = useCallback(() => {\n    setUserSettingsTrigger(!userSettingsTrigger);\n  }, [userSettingsTrigger, setUserSettingsTrigger]);\n  useEffect(() => {\n    window.onclick = event => {\n      if (userSettingsTrigger) {\n        var _dropdown$current;\n        if (!((_dropdown$current = dropdown.current) !== null && _dropdown$current !== void 0 && _dropdown$current.contains(event.target))) {\n          console.log('test');\n          setUserSettingsTrigger(false);\n        }\n      }\n    };\n  }, [userSettingsTrigger]);\n  useEffect(() => {\n    const getMute = async () => {\n      try {\n        const response = await axios.get('http://localhost:3333/chat/mutes/' + channel.name, {\n          withCredentials: true\n        });\n        setMute(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    const fetchAll = async () => {\n      getMute();\n    };\n    fetchAll();\n    const interval = setInterval(fetchAll, 2500);\n    return () => clearInterval(interval);\n  }, [channel.name]);\n  if (user.id === userConnected.id) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  const handlePromote = async () => {\n    try {\n      await axios.post('http://localhost:3333/chat/admin/promote/' + channel.name, {\n        username: user.username\n      }, {\n        withCredentials: true\n      });\n      console.log(user.username + ' has been promoted');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleDemote = async () => {\n    try {\n      await axios.post('http://localhost:3333/chat/admin/demote/' + channel.name, {\n        username: user.username\n      }, {\n        withCredentials: true\n      });\n      console.log(user.username + ' has been demoted');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleKick = async () => {\n    socket === null || socket === void 0 ? void 0 : socket.emit('ToKick', {\n      username: userConnected.username,\n      channel: channel.name,\n      login: user.username\n    });\n    console.log(user.username + ' has been kicked');\n  };\n  const handleBan = async () => {\n    socket === null || socket === void 0 ? void 0 : socket.emit('ToBan', {\n      username: userConnected.username,\n      channel: channel.name,\n      login: user.username\n    });\n    console.log(user.username + ' has been banned');\n  };\n  const handleMute = async () => {\n    socket === null || socket === void 0 ? void 0 : socket.emit('ToMute', {\n      username: userConnected.username,\n      channel: channel.name,\n      login: user.username\n    });\n    console.log(user.username + ' has been muted');\n  };\n  const handleUnmute = async () => {\n    socket === null || socket === void 0 ? void 0 : socket.emit('ToUnmute', {\n      username: userConnected.username,\n      channel: channel.name,\n      login: user.username\n    });\n    console.log(user.username + ' has been unmuted');\n  };\n  const handleBlock = async () => {\n    try {\n      await axios.post('http://localhost:3333/friend/block/' + user.username, {}, {\n        withCredentials: true\n      });\n      console.log(user.username + ' has been blocked');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleUnblock = async () => {\n    try {\n      await axios.post('http://localhost:3333/friend/unblock/' + user.username, {}, {\n        withCredentials: true\n      });\n      console.log(user.username + ' has been unblocked');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-channel-list-element\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: userIsAdmin ? 'dm-list-element-avatar admin-avatar' : 'dm-list-element-avatar',\n      src: 'http://localhost:3333/' + user.avatar,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: userIsAdmin ? 'admin' : undefined,\n      children: [user.username, ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-channel-list-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(ChannelButton, {\n        icon: controller\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ChannelButton, {\n        icon: profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 5\n      }, this), (channel.ownerId === userConnected.id || user.role !== 'admin' && isAdmin === true) && /*#__PURE__*/_jsxDEV(ChannelButton, {\n        icon: settings,\n        onClick: handleUserSettingsTrigger\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-settings-user-channel\",\n        style: {\n          display: userSettingsTrigger ? 'block' : 'none'\n        },\n        ref: dropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handlePromote,\n          children: \"Op this user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 6\n        }, this), !isMute ? /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleMute,\n          children: \"Mute this user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleUnmute,\n          children: \"Unmute this user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleKick,\n          children: \"Kick this user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleBan,\n          children: \"Ban this user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: handleBlock,\n          children: \"Block this user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 353,\n    columnNumber: 3\n  }, this);\n};\n_s3(UserChannelElement, \"Xo2sf/HiSzXc5D0zdr0cwCDcqrQ=\", false, function () {\n  return [useSelector];\n});\n_c4 = UserChannelElement;\nconst UserChannelList = _ref5 => {\n  _s4();\n  let {\n    channel,\n    socket\n  } = _ref5;\n  const [usersList, setUsersList] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const userConnected = useSelector(selectUserData);\n  useEffect(() => {\n    if (!channel.name) return;\n    const getUsers = async () => {\n      if (!channel) return;\n      const response = await axios.get('http://localhost:3333/chat/channel/' + channel.name, {\n        withCredentials: true\n      });\n      setUsersList(response.data.users);\n      response.data.users.forEach(user => {\n        if (user.id === userConnected.id && user.role === 'admin') {\n          setIsAdmin(true);\n        }\n      });\n    };\n    getUsers();\n    const interval = setInterval(getUsers, 2500);\n    return () => clearInterval(interval);\n  }, [channel, userConnected]);\n  return /*#__PURE__*/_jsxDEV(BasicFrame, {\n    title: \"In this channel\",\n    children: usersList.map((user, index) => /*#__PURE__*/_jsxDEV(UserChannelElement, {\n      socket: socket,\n      user: user,\n      channel: channel,\n      isAdmin: isAdmin\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 428,\n    columnNumber: 3\n  }, this);\n};\n_s4(UserChannelList, \"IQ4fqXjLBgRP8Wa8b/P9ZvOBJr0=\", false, function () {\n  return [useSelector];\n});\n_c5 = UserChannelList;\nexport const Aside = _ref6 => {\n  _s5();\n  let {\n    buttonContent,\n    socket\n  } = _ref6;\n  const [newDmTrigger, setNewDmTrigger] = useState(false);\n  const {\n    selectedChannel\n  } = useContext(ChannelsContext);\n  const handleNewDmTrigger = useCallback(() => {\n    setNewDmTrigger(!newDmTrigger);\n  }, [newDmTrigger, setNewDmTrigger]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"aside-channel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dm-aside\",\n      style: {\n        width: '100%',\n        height: '48%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-input\",\n        onClick: handleNewDmTrigger,\n        children: buttonContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-dm-aside\",\n        children: [/*#__PURE__*/_jsxDEV(ChannelLists, {\n          socket: socket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Invite, {\n          socket: socket\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(PopUp, {\n          trigger: newDmTrigger,\n          children: /*#__PURE__*/_jsxDEV(NewChannel, {\n            handleNewDmTrigger: handleNewDmTrigger\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(UserChannelList, {\n      channel: selectedChannel,\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 4\n    }, this), ' ']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 457,\n    columnNumber: 3\n  }, this);\n};\n_s5(Aside, \"YCEmvBq8zdz01LPJVEvsDM2O7cE=\");\n_c6 = Aside;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"ChannelButton\");\n$RefreshReg$(_c2, \"ChannelListElement\");\n$RefreshReg$(_c3, \"ChannelLists\");\n$RefreshReg$(_c4, \"UserChannelElement\");\n$RefreshReg$(_c5, \"UserChannelList\");\n$RefreshReg$(_c6, \"Aside\");","map":{"version":3,"names":["React","useState","useCallback","useContext","useEffect","useRef","axios","ChannelsContext","PopUp","ChannelPassword","NewChannel","UpdateChannel","BasicFrame","controller","settings","profile","useSelector","selectUserData","Invite","jsxDEV","_jsxDEV","Fragment","_Fragment","ChannelButton","_ref","icon","onClick","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","ChannelListElement","_ref2","_s","Channel","socket","ban","setBan","ChannelPasswordTrigger","setChannelPasswordTrigger","ChannelSettingsTrigger","setChannelSettingsTrigger","setMessages","SaveChannel","selectedChannel","setSelectedChannel","connectedUser","getBan","response","get","username","withCredentials","data","error","console","log","getMessages","id","map","message","userId","content","reverse","handleSelectChannel","channel","find","name","state","emit","savechannel","ownerId","handleChannelPasswordTrigger","handleChannelSettingsTrigger","trigger","handleNewDmTrigger","_c2","ChannelLists","_ref3","_s2","ChannelList","index","_c3","UserChannelElement","_ref4","_s3","user","isAdmin","userConnected","userIsAdmin","role","userSettingsTrigger","setUserSettingsTrigger","dropdown","mute","setMute","isMute","handleUserSettingsTrigger","window","onclick","event","_dropdown$current","current","contains","target","getMute","fetchAll","interval","setInterval","clearInterval","handlePromote","post","handleDemote","handleKick","login","handleBan","handleMute","handleUnmute","handleBlock","handleUnblock","avatar","undefined","style","display","ref","_c4","UserChannelList","_ref5","_s4","usersList","setUsersList","setIsAdmin","getUsers","users","forEach","title","_c5","Aside","_ref6","_s5","buttonContent","newDmTrigger","setNewDmTrigger","width","height","_c6","$RefreshReg$"],"sources":["/app/src/Messagerie/Channel/Aside/Aside.tsx"],"sourcesContent":["import React, {\n\tuseState,\n\tuseCallback,\n\tuseContext,\n\tuseEffect,\n\tuseRef,\n} from 'react';\nimport './Aside.css';\nimport { Socket } from 'socket.io-client';\nimport axios from 'axios';\n/* Interface */\nimport { ChannelDto, ChannelsContext } from '../ChannelsUtils';\nimport { userInfoDto } from '../ChannelsUtils';\n/* Components */\nimport { PopUp } from '../../../Profile/Components/MainInfo/MainInfo';\nimport { ChannelPassword } from '../ChannelPassword';\nimport { NewChannel, UpdateChannel } from '../NewChannel/NewChannel';\nimport { BasicFrame } from '../../../Profile/Components/MiddleInfo/MiddleInfo';\n/* Ressources */\nimport controller from '../../Ressources/controller.svg';\nimport settings from '../../Ressources/settings.svg';\nimport profile from '../../Ressources/profile.svg';\nimport { useSelector } from 'react-redux';\nimport { selectUserData } from '../../../utils/redux/selectors';\nimport Invite from '../Invite';\n\nexport const ChannelButton = ({\n\ticon,\n\tonClick,\n}: {\n\ticon: string;\n\tonClick?: any;\n}) => {\n\treturn (\n\t\t<>\n\t\t\t<img\n\t\t\t\tclassName=\"channel-button\"\n\t\t\t\tsrc={icon}\n\t\t\t\talt=\"icon\"\n\t\t\t\tonClick={onClick}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nconst ChannelListElement = ({\n\tChannel,\n\tsocket,\n}: {\n\tChannel: ChannelDto;\n\tsocket: Socket;\n}) => {\n\tconst [ban, setBan] = useState<any[]>([]);\n\tconst [ChannelPasswordTrigger, setChannelPasswordTrigger] = useState(false);\n\tconst [ChannelSettingsTrigger, setChannelSettingsTrigger] = useState(false);\n\tconst { setMessages, SaveChannel, selectedChannel, setSelectedChannel } =\n\t\tuseContext(ChannelsContext);\n\tconst connectedUser = useSelector(selectUserData);\n\n\tuseEffect(() => {\n\t\tconst getBan = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await axios.get(\n\t\t\t\t\t'http://localhost:3333/chat/ban/' + connectedUser.username,\n\t\t\t\t\t{ withCredentials: true }\n\t\t\t\t);\n\t\t\t\tsetBan(response.data);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t};\n\t\tgetBan();\n\t}, [connectedUser.username]);\n\tconst getMessages = async () => {\n\t\ttry {\n\t\t\tconst response = await axios.get(\n\t\t\t\t'http://localhost:3333/chat/channel/messages/' + Channel.id,\n\t\t\t\t{ withCredentials: true }\n\t\t\t);\n\t\t\tresponse.data.map((message: any) => {\n\t\t\t\treturn (\n\t\t\t\t\tmessage.userId === connectedUser.id\n\t\t\t\t\t\t? (message.username = connectedUser.username)\n\t\t\t\t\t\t: (message.username = ''),\n\t\t\t\t\t(message.content = message.message)\n\t\t\t\t);\n\t\t\t});\n\t\t\tsetMessages(response.data.reverse());\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tconst handleSelectChannel = async (channel: ChannelDto) => {\n\t\tconst response = await axios.get(\n\t\t\t'http://localhost:3333/chat/ban/' + connectedUser.username,\n\t\t\t{ withCredentials: true }\n\t\t);\n\t\tsetBan(response.data);\n\t\tif (ban.find((ban: any) => ban.name === channel.name)) {\n\t\t\tconsole.log('You are banned from this channel');\n\t\t\treturn;\n\t\t} else if (channel?.state === 'PUBLIC') {\n\t\t\tsetSelectedChannel(channel);\n\t\t\tgetMessages();\n\t\t\tsocket?.emit('join', {\n\t\t\t\tchannel: channel.name,\n\t\t\t\tusername: connectedUser.username,\n\t\t\t});\n\t\t} else if (channel?.state === 'PROTECTED') {\n\t\t\tif (\n\t\t\t\tSaveChannel.find(\n\t\t\t\t\t(savechannel) => savechannel.name === channel.name\n\t\t\t\t) ||\n\t\t\t\tconnectedUser.id === channel.ownerId\n\t\t\t) {\n\t\t\t\tsetSelectedChannel(channel);\n\t\t\t\tgetMessages();\n\t\t\t\tsocket?.emit('join', {\n\t\t\t\t\tchannel: channel.name,\n\t\t\t\t\tusername: connectedUser.username,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\thandleChannelPasswordTrigger();\n\t\t\t}\n\t\t} else if (channel?.state === 'PRIVATE') {\n\t\t\tif (channel.ownerId === connectedUser.id) {\n\t\t\t\tsetSelectedChannel(channel);\n\t\t\t\tsocket?.emit('join', {\n\t\t\t\t\tchannel: channel.name,\n\t\t\t\t\tusername: connectedUser.username,\n\t\t\t\t});\n\t\t\t} else if (\n\t\t\t\tSaveChannel.find(\n\t\t\t\t\t(savechannel) => savechannel.name === channel.name\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tsetSelectedChannel(channel);\n\t\t\t\tsocket?.emit('join', {\n\t\t\t\t\tchannel: channel.name,\n\t\t\t\t\tusername: connectedUser.username,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconsole.log(\"You don't have access to this channel\");\n\t\t\t}\n\t\t}\n\t};\n\n\tconst handleChannelPasswordTrigger = useCallback(() => {\n\t\tsetChannelPasswordTrigger(!ChannelPasswordTrigger);\n\t}, [ChannelPasswordTrigger, setChannelPasswordTrigger]);\n\n\tconst handleChannelSettingsTrigger = useCallback(() => {\n\t\tsetChannelSettingsTrigger(!ChannelSettingsTrigger);\n\t}, [ChannelSettingsTrigger, setChannelSettingsTrigger]);\n\n\treturn (\n\t\t<>\n\t\t\t<div\n\t\t\t\tclassName={`dm-list-element ${\n\t\t\t\t\tChannel.id === selectedChannel?.id && 'active'\n\t\t\t\t}`}\n\t\t\t\tonClick={() => handleSelectChannel(Channel)}>\n\t\t\t\t<h4>{Channel.name}</h4>\n\t\t\t\t{connectedUser.id === Channel.ownerId && (\n\t\t\t\t\t<ChannelButton\n\t\t\t\t\t\ticon={settings}\n\t\t\t\t\t\tonClick={handleChannelSettingsTrigger}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<PopUp trigger={ChannelSettingsTrigger}>\n\t\t\t\t<UpdateChannel\n\t\t\t\t\thandleNewDmTrigger={handleChannelSettingsTrigger}\n\t\t\t\t/>\n\t\t\t</PopUp>\n\t\t\t<PopUp trigger={ChannelPasswordTrigger}>\n\t\t\t\t<ChannelPassword\n\t\t\t\t\thandleChannelPasswordTrigger={handleChannelPasswordTrigger}\n\t\t\t\t\tChannel={Channel}\n\t\t\t\t/>\n\t\t\t</PopUp>\n\t\t</>\n\t);\n};\n\nconst ChannelLists = ({ socket }: { socket: Socket }) => {\n\tconst { ChannelList } = useContext(ChannelsContext);\n\n\treturn (\n\t\t<div className=\"dm-list\">\n\t\t\t{ChannelList.map((Channel, index) => {\n\t\t\t\treturn (\n\t\t\t\t\t<ChannelListElement\n\t\t\t\t\t\tChannel={Channel}\n\t\t\t\t\t\tsocket={socket}\n\t\t\t\t\t\tkey={index}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t})}\n\t\t</div>\n\t);\n};\n\nconst UserChannelElement = ({\n\tuser,\n\tchannel,\n\tisAdmin,\n\tsocket,\n}: {\n\tuser: userInfoDto;\n\tchannel: ChannelDto;\n\tisAdmin: boolean;\n\tsocket: Socket;\n}) => {\n\tconst userConnected = useSelector(selectUserData);\n\tconst userIsAdmin = channel.ownerId === user.id || user.role === 'admin';\n\tconst [userSettingsTrigger, setUserSettingsTrigger] = useState(false);\n\tconst dropdown = useRef<HTMLDivElement>(null);\n\tconst [mute, setMute] = useState<any[]>([]);\n\tlet isMute: boolean = false;\n\n\tconst handleUserSettingsTrigger = useCallback(() => {\n\t\tsetUserSettingsTrigger(!userSettingsTrigger);\n\t}, [userSettingsTrigger, setUserSettingsTrigger]);\n\n\tuseEffect(() => {\n\t\twindow.onclick = (event: any) => {\n\t\t\tif (userSettingsTrigger) {\n\t\t\t\tif (!dropdown.current?.contains(event.target)) {\n\t\t\t\t\tconsole.log('test');\n\t\t\t\t\tsetUserSettingsTrigger(false);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}, [userSettingsTrigger]);\n\n\tuseEffect(() => {\n\t\tconst getMute = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await axios.get(\n\t\t\t\t\t'http://localhost:3333/chat/mutes/' + channel.name,\n\t\t\t\t\t{ withCredentials: true }\n\t\t\t\t);\n\t\t\t\tsetMute(response.data);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t};\n\t\tconst fetchAll = async () => {\n\t\t\tgetMute();\n\t\t};\n\t\tfetchAll();\n\t\tconst interval = setInterval(fetchAll, 2500);\n\t\treturn () => clearInterval(interval);\n\t}, [channel.name]);\n\n\tif (user.id === userConnected.id) return <></>;\n\n\tconst handlePromote = async () => {\n\t\ttry {\n\t\t\tawait axios.post(\n\t\t\t\t'http://localhost:3333/chat/admin/promote/' + channel.name,\n\t\t\t\t{\n\t\t\t\t\tusername: user.username,\n\t\t\t\t},\n\t\t\t\t{ withCredentials: true }\n\t\t\t);\n\t\t\tconsole.log(user.username + ' has been promoted');\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\tconst handleDemote = async () => {\n\t\ttry {\n\t\t\tawait axios.post(\n\t\t\t\t'http://localhost:3333/chat/admin/demote/' + channel.name,\n\t\t\t\t{\n\t\t\t\t\tusername: user.username,\n\t\t\t\t},\n\t\t\t\t{ withCredentials: true }\n\t\t\t);\n\t\t\tconsole.log(user.username + ' has been demoted');\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\tconst handleKick = async () => {\n\t\tsocket?.emit('ToKick', {\n\t\t\tusername: userConnected.username,\n\t\t\tchannel: channel.name,\n\t\t\tlogin: user.username,\n\t\t});\n\t\tconsole.log(user.username + ' has been kicked');\n\t};\n\n\tconst handleBan = async () => {\n\t\tsocket?.emit('ToBan', {\n\t\t\tusername: userConnected.username,\n\t\t\tchannel: channel.name,\n\t\t\tlogin: user.username,\n\t\t});\n\t\tconsole.log(user.username + ' has been banned');\n\t};\n\n\tconst handleMute = async () => {\n\t\tsocket?.emit('ToMute', {\n\t\t\tusername: userConnected.username,\n\t\t\tchannel: channel.name,\n\t\t\tlogin: user.username,\n\t\t});\n\t\tconsole.log(user.username + ' has been muted');\n\t};\n\n\tconst handleUnmute = async () => {\n\t\tsocket?.emit('ToUnmute', {\n\t\t\tusername: userConnected.username,\n\t\t\tchannel: channel.name,\n\t\t\tlogin: user.username,\n\t\t});\n\t\tconsole.log(user.username + ' has been unmuted');\n\t};\n\n\tconst handleBlock = async () => {\n\t\ttry {\n\t\t\tawait axios.post(\n\t\t\t\t'http://localhost:3333/friend/block/' + user.username,\n\t\t\t\t{},\n\t\t\t\t{ withCredentials: true }\n\t\t\t);\n\t\t\tconsole.log(user.username + ' has been blocked');\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\tconst handleUnblock = async () => {\n\t\ttry {\n\t\t\tawait axios.post(\n\t\t\t\t'http://localhost:3333/friend/unblock/' + user.username,\n\t\t\t\t{},\n\t\t\t\t{ withCredentials: true }\n\t\t\t);\n\t\t\tconsole.log(user.username + ' has been unblocked');\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"user-channel-list-element\">\n\t\t\t<img\n\t\t\t\tclassName={\n\t\t\t\t\tuserIsAdmin\n\t\t\t\t\t\t? 'dm-list-element-avatar admin-avatar'\n\t\t\t\t\t\t: 'dm-list-element-avatar'\n\t\t\t\t}\n\t\t\t\tsrc={'http://localhost:3333/' + user.avatar}\n\t\t\t\talt=\"\"\n\t\t\t/>\n\t\t\t<h4 className={userIsAdmin ? 'admin' : undefined}>\n\t\t\t\t{user.username}{' '}\n\t\t\t\t{/* user.role ==> \"user\" || \"admin\" || \"owner\"*/}\n\t\t\t</h4>\n\t\t\t<div className=\"user-channel-list-buttons\">\n\t\t\t\t<ChannelButton icon={controller} />\n\t\t\t\t<ChannelButton icon={profile} />\n\t\t\t\t{(channel.ownerId === userConnected.id ||\n\t\t\t\t\t(user.role !== 'admin' && isAdmin === true)) && (\n\t\t\t\t\t<ChannelButton\n\t\t\t\t\t\ticon={settings}\n\t\t\t\t\t\tonClick={handleUserSettingsTrigger}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"dropdown-settings-user-channel\"\n\t\t\t\t\tstyle={{ display: userSettingsTrigger ? 'block' : 'none' }}\n\t\t\t\t\tref={dropdown}>\n\t\t\t\t\t<p onClick={handlePromote}>Op this user</p>\n\t\t\t\t\t{!isMute ? (\n\t\t\t\t\t\t<p onClick={handleMute}>Mute this user</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<p onClick={handleUnmute}>Unmute this user</p>\n\t\t\t\t\t)}\n\t\t\t\t\t<p onClick={handleKick}>Kick this user</p>\n\t\t\t\t\t<p onClick={handleBan}>Ban this user</p>\n\t\t\t\t\t<p onClick={handleBlock}>Block this user</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst UserChannelList = ({\n\tchannel,\n\tsocket,\n}: {\n\tchannel: ChannelDto;\n\tsocket: Socket;\n}) => {\n\tconst [usersList, setUsersList] = useState<userInfoDto[]>([]);\n\tconst [isAdmin, setIsAdmin] = useState(false);\n\tconst userConnected = useSelector(selectUserData);\n\n\tuseEffect(() => {\n\t\tif (!channel.name) return;\n\t\tconst getUsers = async () => {\n\t\t\tif (!channel) return;\n\t\t\tconst response = await axios.get(\n\t\t\t\t'http://localhost:3333/chat/channel/' + channel.name,\n\t\t\t\t{ withCredentials: true }\n\t\t\t);\n\t\t\tsetUsersList(response.data.users);\n\t\t\tresponse.data.users.forEach((user: userInfoDto) => {\n\t\t\t\tif (user.id === userConnected.id && user.role === 'admin') {\n\t\t\t\t\tsetIsAdmin(true);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\tgetUsers();\n\t\tconst interval = setInterval(getUsers, 2500);\n\t\treturn () => clearInterval(interval);\n\t}, [channel, userConnected]);\n\n\treturn (\n\t\t<BasicFrame title=\"In this channel\">\n\t\t\t{usersList.map((user, index) => (\n\t\t\t\t<UserChannelElement\n\t\t\t\t\tsocket={socket}\n\t\t\t\t\tuser={user}\n\t\t\t\t\tkey={index}\n\t\t\t\t\tchannel={channel}\n\t\t\t\t\tisAdmin={isAdmin}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</BasicFrame>\n\t);\n};\n\nexport const Aside = ({\n\tbuttonContent,\n\tsocket,\n}: {\n\tbuttonContent: string;\n\tsocket: Socket;\n}) => {\n\tconst [newDmTrigger, setNewDmTrigger] = useState(false);\n\tconst { selectedChannel } = useContext(ChannelsContext);\n\n\tconst handleNewDmTrigger = useCallback(() => {\n\t\tsetNewDmTrigger(!newDmTrigger);\n\t}, [newDmTrigger, setNewDmTrigger]);\n\n\treturn (\n\t\t<div className=\"aside-channel\">\n\t\t\t<div className=\"dm-aside\" style={{ width: '100%', height: '48%' }}>\n\t\t\t\t<button className=\"new-input\" onClick={handleNewDmTrigger}>\n\t\t\t\t\t{buttonContent}\n\t\t\t\t</button>\n\t\t\t\t<div className=\"content-dm-aside\">\n\t\t\t\t\t<ChannelLists socket={socket} />\n\t\t\t\t\t<Invite socket={socket} />\n\t\t\t\t\t<PopUp trigger={newDmTrigger}>\n\t\t\t\t\t\t<NewChannel handleNewDmTrigger={handleNewDmTrigger} />\n\t\t\t\t\t</PopUp>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<UserChannelList channel={selectedChannel} socket={socket} />{' '}\n\t\t</div>\n\t);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}